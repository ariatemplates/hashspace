
/*
 * Copyright 2014 Amadeus s.a.s.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

var hsp=require("hsp/rt"),
    ht=require("hsp/utils/hashtester");

# template test1(data)
    <textarea rows="4" cols="40"  model="{data.text}"/>
# /template

// normalize carriage returns to avoic OS discrepancies
function normalizeCR(s) {
    return s.replace(/\r\n|[\r\n]/gi,"\n");
}

describe("Textarea Elements", function () {
    it("validates model synchronization", function () {
        var h=ht.newTestContext();
        var model={text:"line 1\nline2"};

        test1(model).render(h.container);
        expect(normalizeCR(h("textarea").value())).to.equal("line 1\nline2");

        // change value from the DOM
        h("textarea").type("AAA\nBBB\nCCC");
        expect(normalizeCR(model.text)).to.equal("AAA\nBBB\nCCC"); 

        // change value from the model
        h.$set(model,"text","Hello\nWorld!");
        expect(normalizeCR(h("textarea").value())).to.equal("Hello\nWorld!");

        h.$dispose();
    });
});
