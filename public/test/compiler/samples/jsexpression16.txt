##### Template:
# template test(person)
  <div title="{person.name+"!"|bar:1+2|foo}">
    hello
  </div>
# /template

##### Parsed Tree:
[
  {
    "type": "template","name": "test","args": ["person"],"line": 1,"column": 1,
    "content": [
      {
        "type": "element",
        "name": "div",
        "closed": false,
        "attributes": [
          {
            "type": "attribute",
            "name": "title",
            "value": [
              {
                "type": "expression",
                "operator": "+",
                "left": {
                  "type": "PropertyAccess",
                  "base": {"type": "Variable","name": "person","code": "person"},
                  "name": "name",
                  "code": "person.name"
                },
                "right": {
                  "type": "expression",
                  "category": "string",
                  "value": "!",
                  "code": "!"
                },
                "category": "jsexpression",
                "expType": "BinaryExpression",
                "line": 2,
                "column": 15,
                "pipes": [
                  {
                    "fnexpr": {"type": "Variable","name": "bar","code": "bar"},
                    "args": [
                      {
                        "type": "BinaryExpression",
                        "operator": "+",
                        "left": {
                          "type": "expression",
                          "category": "number",
                          "value": 1,
                          "code": "1"
                        },
                        "right": {
                          "type": "expression",
                          "category": "number",
                          "value": 2,
                          "code": "2"
                        }
                      }
                    ]
                  },
                  {
                    "fnexpr": {
                      "type": "Variable",
                      "name": "foo",
                      "code": "foo"
                    },
                    "args": []
                  }
                ],
                "bound": true
              }
            ],
            "line": 2,
            "column": 8
          }
        ],
        "line": 2,
        "column": 3
      },
      {"type": "text", "value": "hello ", "line": 3, "column": 5},
      {"type": "endelement", "name": "div", "line": 4, "column": 3}
    ],
    "closed": true,
    "endLine": 5
  }
]


##### Syntax Tree:
[
  {
    "type": "template","name": "test","args": ["person"],"export": false,"startLine": 1,"endLine": 5,
    "content": [
      {
        "type": "element",
        "name": "div",
        "closed": false,
        "attributes": [
          {
            "type": "expression",
            "category": "functionref",
            "bound": true,
            "path": [ "_foo" ],
            "args": [
              {
                "type": "expression",
                "category": "functionref",
                "path": [ "_bar" ],
                "args": [
                  {
                    "type": "expression",
                    "category": "jsexpression",
                    "objectrefs": [
                      {
                        "type": "expression",
                        "category": "objectref",
                        "path": [ "person", "name" ]
                      }
                    ],
                    "code": "(a0 + \"!\")"
                  },
                  {
                    "type": "expression",
                    "category": "jsexpression",
                    "objectrefs": [],
                    "code": "(1 + 2)"
                  }
                ]
              }
            ],
            "line": 2,
            "column": 15,
            "name": "title"
          }
        ],
        "content": [{"type": "text","value": "hello "}]
      }
    ]
  }
]


##### Template Code
test=[
    n.elt("div",{
        e1:[4,1,_foo,1,2],
        e2:[4,1,_bar,1,3,1,5],
        e3:[6,function(a0) {return (a0 + "!");},4],
        e4:[1,2,"person","name"],
        e5:[6,function() {return (1 + 2);}]
    },{
        "title":["",1]
    },0,[
        n.$text(0,["hello "])
    ])
]
