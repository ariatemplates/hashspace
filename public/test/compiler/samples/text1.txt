##### Template:
# template hello(person)
	Hello {person.name}!
# /template

##### Parsed Tree:
[
  {
    "type": "template",
    "name": "hello",
    "args": [ "person"],
    "content": [
      { 
      	"type": "text", "value": "Hello "
      }, {
        "type": "expression",
        "expType": "PropertyAccess",
        "category": "jsexpression",
        "bound": true,
        "base": {type:"Variable", name:"person"},
        "name": "name"
      }, { 
      	"type": "text", "value": "!"
      }
    ]
  }
]

##### Syntax Tree:
[
  {
    "type": "template",
    "name": "hello",
    "args": ["person"],
    "content": [
      {
        "type": "textblock",
        "content": [
          { 
          	"type": "text", "value": "Hello " 
          }, { 
          	"type": "expression", 
          	"category": "objectref",
          	"bound": true, 
          	"path": [ "person", "name" ]
          }, { 
          	"type": "text", "value": "!" 
          }
        ]
      }
    ]
  }
]

##### Template Code
hello=[
  n.$text({e1:[1,2,"person","name"]},["Hello ",1,"!"])
]
