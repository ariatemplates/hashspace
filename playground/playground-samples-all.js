!function(a){a("samples/clickhandler/clickhandler.hsp.js",["hsp/$set","hsp/rt"],function(a){function b(){switch(f++,f%3){case 0:d(e,"isWarning",!1),d(e,"text","Click me to discover hashspace event handlers");break;case 1:d(e,"text","Well done - you called the event handler and updated the data model in a row!");break;case 2:d(e,"isWarning",!0),d(e,"text","If you click again you will be back to first step!")}}var c=a.require,d=(a.exports,a.filename,a.dirname,c("hsp/$set")),e={text:""},f=-1,g=c("hsp/rt").template(["msg"],function(a){var c,d;try{c=b}catch(f){c=a.g("changeMessage")}try{d=e}catch(f){d=a.g("msg")}var g={changeMessage:"undefined"==typeof b?a.g("changeMessage"):b,msg:"undefined"==typeof e?a.g("msg"):e};return[g,a.elt("div",{e1:[9,"changeMessage()"]},{title:"click me!"},{click:1,selectstart:"return false"},[a.$if({e1:[9,"msg.isWarning"]},1,[a.elt("span",0,{"class":"warning"},0,[a.$text(0,["WARNING:Â "])])]),a.elt("span",0,0,0,[a.$text({e1:[9,"msg.text"]},["",1])])])]});d(a.exports,"msg",e),b(),d(a,"exports",{template:g,data:[e]})}),a("samples/clock/clock.hsp.js",["hsp/$set","hsp/klass","hsp/rt"],function(a){var b=a.require,d=(a.exports,a.filename,a.dirname,b("hsp/$set")),e=b("hsp/klass"),f={SFO:{city:"San Francisco",offset:-8},PAR:{city:"Paris",offset:1},TYO:{city:"Tokyo",offset:9}},g=e({$attributes:{city:{type:"string",binding:"1-way",defaultValue:"PAR"}},$init:function(){d(this,"minuteMarkers",[]);for(var a=0;60>a;a++)d(this.minuteMarkers,a,{major:a%5===0});this.$onCityChange(),d(this,"_iid",setInterval(this.tick.bind(this),100))},$dispose:function(){clearInterval(this._iid)},$onCityChange:function(){f[this.city]||d(this,"city","PAR"),this.tick()},tick:function(){var a=new Date,b=f[this.city].offset,c=a.getTimezoneOffset()/60;a=new Date(a.getTime()+36e5*(c+b)),d(this,"hours",a.getHours()),d(this,"minutes",a.getMinutes()),d(this,"seconds",a.getSeconds()),d(this,"milliseconds",a.getMilliseconds()),d(this,"cityName",f[this.city].city)}}),h=b("hsp/rt").template({ctl:[g,"ClockController"],ref:"c"},function(a){var b,d,e;try{b=c}catch(f){b=a.g("c")}try{d=m}catch(f){d=a.g("m")}try{e=idx}catch(f){e=a.g("idx")}var g={c:"undefined"==typeof c?a.g("c"):c,m:"undefined"==typeof m?a.g("m"):m,idx:"undefined"==typeof idx?a.g("idx"):idx};return[g,a.$text(0,[" "]),a.elt("div",0,{"class":"square"},0,[a.elt("svg",0,{viewBox:"0 0 100 100"},0,[a.elt("g",0,{transform:"translate(50,50)"},0,[a.elt("circle",0,{"class":"clock-face",r:"48"},0),a.$text(0,[" "]),a.$foreach({e1:[9,"c.minuteMarkers"]},"idx","m",0,1,[a.$text(0,[" "]),a.elt("line",{e1:[9,"{'major':m.major,'minor':!m.major}"],e2:[9,"m.major?35:42"],e3:[9,"360*idx/c.minuteMarkers.length"]},{"class":["",1],y1:["",2],y2:"45",transform:["rotate(",3,")"]},0)]),a.$text(0,["  "]),a.elt("line",{e1:[9,"30*c.hours+c.minutes/2"]},{"class":"hour",y1:"2",y2:"-20",transform:["rotate(",1,")"]},0),a.$text(0,[" "]),a.elt("line",{e1:[9,"6*c.minutes+c.seconds/10"]},{"class":"minute",y1:"4",y2:"-30",transform:["rotate(",1,")"]},0),a.$text(0,[" "]),a.elt("g",{e1:[9,"6*(c.seconds+c.milliseconds*0.001)"]},{transform:["rotate(",1,")"]},0,[a.elt("line",0,{"class":"second",y1:"10",y2:"-38"},0),a.elt("line",0,{"class":"second-counterweight",y1:"10",y2:"2"},0)])])]),a.elt("div",0,{"class":"city"},0,[a.$text({e1:[9,"c.cityName"]},["",1])])])]}),i=b("hsp/rt").template([],function(a){var b;try{b=h}catch(c){b=a.g("clock")}var d={clock:"undefined"==typeof h?a.g("clock"):h};return[d,a.cpt([b,"clock"],0,{city:"SFO"},0),a.cpt([b,"clock"],0,{city:"PAR"},0),a.cpt([b,"clock"],0,{city:"TYO"},0)]});d(a,"exports",{template:i})}),a("samples/component1/timer.hsp.js",["hsp/$set","hsp/klass","hsp/rt"],function(a){var b=a.require,c=(a.exports,a.filename,a.dirname,b("hsp/$set")),d=b("hsp/klass"),e=d({$attributes:{initvalue:{type:"int",defaultValue:0,binding:"none"}},$init:function(){c(this,"secondsElapsed",this.initvalue),c(this,"_iid",setInterval(this.tick.bind(this),1e3))},$dispose:function(){clearInterval(this._iid)},tick:function(){c.inc(this,"secondsElapsed")}}),f=b("hsp/rt").template({ctl:[e,"Timer"],ref:"t"},function(a){var b;try{b=t}catch(c){b=a.g("t")}var d={t:"undefined"==typeof t?a.g("t"):t};return[d,a.$text({e1:[9,"t.secondsElapsed"]},["Elapsed time: ",1,"s"])]}),g=b("hsp/rt").template([],function(a){var b;try{b=f}catch(c){b=a.g("timer")}var d={timer:"undefined"==typeof f?a.g("timer"):f};return[d,a.$text(0,["Sample showing two timer instances with different init values:"]),a.elt("br",0,0,0),a.cpt([b,"timer"],0,0,0),a.$text(0,[" "]),a.elt("br",0,0,0),a.cpt([b,"timer"],0,{initvalue:"10"},0)]});c(a,"exports",{template:g})}),a("samples/component2/nbrfield.hsp.js",["hsp/$set","hsp/klass","hsp/rt"],function(a){function b(a){return a=""+a,j.test(a)?Number(a):null}var e=a.require,f=a.exports,g=(a.filename,a.dirname,e("hsp/$set")),h=e("hsp/klass"),i=h({$attributes:{value:{type:"float",defaultValue:0,binding:"2-way"},defaultvalue:{type:"float",defaultValue:0},min:{type:"float",defaultValue:-Number.MAX_VALUE,binding:"1-way"},max:{type:"float",defaultValue:Number.MAX_VALUE,binding:"1-way"},onreset:{type:"callback"}},$init:function(){g(this,"internalValue",""+this.value),g(this,"isValid",!0),this.checkValidity()},$onValueChange:function(a){var c=b(a);g(this,"internalValue",null!==c?c:0),this.checkValidity()},$onMinChange:function(){this.checkValidity()},$onMaxChange:function(){this.checkValidity()},$onInternalValueChange:function(){g(this,"value",this.checkValidity()?parseInt(this.internalValue,10):this.defaultvalue)},checkValidity:function(){var a=b(this.internalValue),c=null===a?!1:a>=this.min&&a<=this.max;return g(this,"isValid",c)},resetField:function(){var a=this.value,b=this.defaultvalue;g(this,"internalValue",b),g(this,"value",b),this.checkValidity(),this.onreset({oldValue:a,newValue:b})}}),j=/^(\-|\.|\+)?\d+(\.)?(\d+)?$/,k=g(f,"nbrfield",e("hsp/rt").template({ctl:[i,"NbrField"],ref:"c"},function(a){var b;try{b=c}catch(d){b=a.g("c")}var e={c:"undefined"==typeof c?a.g("c"):c};return[e,a.elt("span",0,{"class":"nbrfield"},0,[a.elt("input",{e1:[9,"c.internalValue"],e2:[9,"{'error': !c.isValid}"]},{type:"text",model:["",1],"class":["nbrfield ",2]},0),a.elt("button",{e1:[9,"c.resetField()"]},0,{click:1},[a.$text(0,["reset"])])])]})),l=e("hsp/rt").template(["d"],function(a){var b,c;try{b=d}catch(e){b=a.g("d")}try{c=k}catch(e){c=a.g("nbrfield")}var f={d:"undefined"==typeof d?a.g("d"):d,nbrfield:"undefined"==typeof k?a.g("nbrfield"):k};return[f,a.$text(0,["Component #1: "]),a.cpt([c,"nbrfield"],{e1:[9,"d.value1"]},{value:["",1],min:"-10",max:"1000"},0),a.elt("br",0,0,0),a.$text(0,["Value in the data model: "]),a.elt("span",0,{"class":"textValue"},0,[a.$text({e1:[9,"d.value1"]},["",1])]),a.$text(0,["(min:-10 / max:1000 / default:0) "]),a.elt("hr",0,0,0),a.$text(0,["Component #2: "]),a.cpt([c,"nbrfield"],{e1:[9,"d.value2"]},{value:["",1]},0),a.elt("br",0,0,0),a.$text(0,["Value in the data model: "]),a.elt("span",0,{"class":"textValue"},0,[a.$text({e1:[9,"d.value2"]},["",1])])]});g(a,"exports",{template:l,data:[{value1:123}]})}),a("samples/component3/pagination.hsp.js",["hsp/$set","hsp/klass","hsp/rt"],function(a){function b(a,b){return Math.ceil(a/b)}function c(a){for(var b=[],c=0;a>c;c++)b.push(c);return b}function d(a){g(a,"noOfPages",b(a.collectionsize,a.pagesize)),g(a,"pages",c(a.noOfPages)),a.selectPage(a.activepage)}function e(a){g(l,"lastSelectedPage",a)}var f=a.require,g=(a.exports,a.filename,a.dirname,f("hsp/$set")),h=f("hsp/klass"),i=h({$attributes:{collectionsize:{type:"int",defaultValue:0,binding:"1-way"},pagesize:{type:"int",defaultValue:10,binding:"1-way"},activepage:{type:"int",defaultValue:0,binding:"2-way"},onpageselect:{type:"callback"}},$init:function(){d(this)},selectPage:function(a){a=Math.min(Math.max(0,a),this.noOfPages-1),this.activepage!==a&&(g(this,"activepage",a),this.onpageselect({pageNumber:this.activepage}))},$onCollectionsizeChange:function(){d(this)},$onPagesizeChange:function(){d(this)}}),j=f("hsp/rt").template({ctl:[i,"Pagination"],ref:"p"},function(a){var b,c;try{b=p}catch(d){b=a.g("p")}try{c=page}catch(d){c=a.g("page")}var e={p:"undefined"==typeof p?a.g("p"):p,page:"undefined"==typeof page?a.g("page"):page};return[e,a.elt("ul",0,{"class":"pagination"},0,[a.elt("li",{e1:[9,"{'disabled':p.activepage===0}"]},{"class":["",1]},0,[a.elt("a",{e1:[9,"p.selectPage(p.activepage-1)"]},{href:"javascript:void(0)"},{click:1},[a.$text(0,["Previous"])])]),a.$foreach({e1:[9,"p.pages"]},"page_key","page",0,1,[a.elt("li",{e1:[9,"{'active':page==p.activepage}"]},{"class":["",1]},0,[a.elt("a",{e1:[9,"p.selectPage(page)"]},{href:"javascript:void(0)"},{click:1},[a.$text({e1:[9,"page + 1"]},["",1])])])]),a.$text(0,[" "]),a.elt("li",{e1:[9,"{'disabled':p.activepage>=p.noOfPages-1}"]},{"class":["",1]},0,[a.elt("a",{e1:[9,"p.selectPage(p.activepage+1)"]},{href:"javascript:void(0)"},{click:1},[a.$text(0,["Next"])])])])]}),k=f("hsp/rt").template(["model"],function(a){var b,c,d,f;try{b=l}catch(g){b=a.g("model")}try{c=e}catch(g){c=a.g("updateSelection")}try{d=$event}catch(g){d=a.g("$event")}try{f=j}catch(g){f=a.g("pagination")}var h={model:"undefined"==typeof l?a.g("model"):l,updateSelection:"undefined"==typeof e?a.g("updateSelection"):e,$event:"undefined"==typeof $event?a.g("$event"):$event,pagination:"undefined"==typeof j?a.g("pagination"):j};return[h,a.elt("div",0,{"class":"section3"},0,[a.elt("label",0,{"class":"fieldlabel"},0,[a.$text(0,["Active page: "])]),a.elt("input",{e1:[9,"model.active"]},{type:"number",model:["",1]},0),a.elt("br",0,0,0),a.elt("label",0,{"class":"fieldlabel"},0,[a.$text(0,["Collection size: "])]),a.elt("input",{e1:[9,"model.collectionSize"]},{type:"number",model:["",1]},0),a.elt("br",0,0,0),a.elt("label",0,{"class":"fieldlabel"},0,[a.$text(0,["Page size: "])]),a.elt("input",{e1:[9,"model.pageSize"]},{type:"number",model:["",1]},0),a.elt("br",0,0,0),a.$text(0,["Last page selection  "]),a.elt("i",0,0,0,[a.$text(0,[" - from event"])]),a.$text(0,[": "]),a.elt("span",0,{"class":"textValue"},0,[a.$text({e1:[9,"model.lastSelectedPage"]},["",1])])]),a.cpt([f,"pagination"],{e1:[9,"model.active"],e2:[9,"model.collectionSize"],e3:[9,"model.pageSize"],e4:[9,"updateSelection($event.pageNumber)"]},{activepage:["",1],collectionsize:["",2],pagesize:["",3]},{pageselect:4})]}),l={active:4,collectionSize:99,pageSize:10,lastSelectedPage:"(...)"};g(a,"exports",{template:k,data:[l]})}),a("samples/conditions/conditions.hsp.js",["hsp/$set","hsp/klass","hsp/rt"],function(a){var b=a.require,c=(a.exports,a.filename,a.dirname,b("hsp/$set")),d=b("hsp/klass"),e=b("hsp/rt").template(["nt"],function(a){var b;try{b=nt}catch(c){b=a.g("nt")}var d={nt:"undefined"==typeof nt?a.g("nt"):nt};return[d,a.elt("div",0,0,0,[a.$text(0,["Number: "]),a.elt("span",0,{"class":"textvalue"},0,[a.$text({e1:[9,"nt.number"]},["",1])]),a.$if({e1:[9,"nt.number==0"]},1,[a.$text(0,["(Number equals zero) "])],[a.$if({e1:[9,"nt.number>0"]},1,[a.$text(0,["(Number is greater than zero) "])],[a.$text(0,["(Number is less than zero) "])])]),a.elt("br",0,0,0),a.$text(0,["Condition using ternary operator: Number is "]),a.elt("span",0,{"class":"textvalue"},0,[a.$text({e1:[9,'nt.number>0? "strictly positive" : "negative or null"']},["",1," "])])]),a.elt("div",0,{"class":"section2"},0,[a.elt("a",{e1:[9,"nt.increment(1)"]},{href:"javascript:void(0)"},{click:1},[a.$text(0,["Increment Number"])]),a.$text(0,[" - "]),a.elt("a",{e1:[9,"nt.increment(-1)"]},{href:"javascript:void(0)"},{click:1},[a.$text(0,["Decrement Number"])])])]}),f=d({$constructor:function(){c(this,"number",0)},increment:function(a){return c(this,"number",this.number+a),!1}});c(a,"exports",{template:e,data:function(){return[new f]}})}),a("samples/cssclass/cssclass.hsp.js",["hsp/$set","hsp/rt"],function(a){function b(){e(g,"urgency",!g.urgency)}function c(a){e(g,"category",a)}var d=a.require,e=(a.exports,a.filename,a.dirname,d("hsp/$set")),f=d("hsp/rt").template(["msg"],function(a){var d,e,f;try{d=b}catch(h){d=a.g("toggleUrgency")}try{e=c}catch(h){e=a.g("setCategory")}try{f=g}catch(h){f=a.g("msg")}var i={toggleUrgency:"undefined"==typeof b?a.g("toggleUrgency"):b,setCategory:"undefined"==typeof c?a.g("setCategory"):c,msg:"undefined"==typeof g?a.g("msg"):g};return[i,a.$text(0,[" "]),a.elt("div",0,0,{selectstart:"return false"},[a.elt("a",{e1:[9,"toggleUrgency()"]},{href:"javascript:void(0)"},{click:1},[a.$text(0,["Change Urgency"])]),a.$text(0,[" - "]),a.elt("a",{e1:[9,"setCategory('personal')"]},{href:"javascript:void(0)"},{click:1},[a.$text(0,['Set "Personal"'])]),a.$text(0,[" - "]),a.elt("a",{e1:[9,"setCategory('professional')"]},{href:"javascript:void(0)"},{click:1},[a.$text(0,['Set "Professional"'])]),a.elt("div",{e1:[9,"msg.category"],e2:[9,"{'urgent':msg.urgency}"]},{"class":["msg ",1," ",2]},0,[a.$text({e1:[9,"msg.text"]},["Message: ",1," "])]),a.elt("div",0,{"class":"note"},0,[a.$text({e1:[9,"msg.category"],e2:[9,"msg.urgency ? 'urgent' : ''"]},['Class value: "msg ',1," ",2,'" '])])])]}),g={text:"Hello World",urgency:!1};e(a,"exports",{template:f,data:[g]})}),a("samples/dynpath/dynpath.hsp.js",["hsp/$set","hsp/rt"],function(a){function b(){for(var a=0;h>a;a++)e.op(g[a],"b","+=","!"),e.op(g[a],"c","+=","?")}function c(){var a=j.columns;"c"===a[2]?a.splice(2,1):a.splice(2,0,"c")}for(var d=a.require,e=(a.exports,a.filename,a.dirname,d("hsp/$set")),f=d("hsp/rt").template(["data"],function(a){var d,e,f,g,h;try{d=data}catch(i){d=a.g("data")}try{e=name}catch(i){e=a.g("name")}try{f=idx}catch(i){f=a.g("idx")}try{g=b}catch(i){g=a.g("update")}try{h=c}catch(i){h=a.g("swapC")}var j={data:"undefined"==typeof data?a.g("data"):data,name:"undefined"==typeof name?a.g("name"):name,idx:"undefined"==typeof idx?a.g("idx"):idx,update:"undefined"==typeof b?a.g("update"):b,swapC:"undefined"==typeof c?a.g("swapC"):c};return[j,a.elt("div",0,0,0,[a.$foreach({e1:[9,"data.rows"]},"idx_key","idx",0,1,[a.elt("div",0,0,0,[a.$foreach({e1:[9,"data.columns"]},"name_key","name",0,1,[a.$if({e1:[9,'name==="c"']},1,[a.elt("input",{e1:[9,"data.items[idx][name]"]},{"class":"cell",type:"text",model:["",1]},0)]),a.elt("div",{e1:[9,"idx"],e2:[9,"name"]},{"class":"cell",title:["Ref: ",1,"/",2]},0,[a.$text({e1:[9,"data.items[idx][name]"]},["",1," Â  "])])]),a.$text(0,[" "])])]),a.$text(0,[" "])]),a.elt("a",{e1:[9,"update()"]},{href:"javascript:void(0)"},{click:1},[a.$text(0,["Update columns B&C"])]),a.$text(0,["Â -Â  "]),a.elt("a",{e1:[9,"swapC()"]},{href:"javascript:void(0)"},{click:1},[a.$text(0,["Show/Hide columns C"])])]}),g=[],h=5,i=0;h>i;i++)g.push({a:"A"+i,b:"B"+i,c:"C"+i,d:"D"+i});var j={items:g,rows:[0,1,2,3,4],columns:["a","b","c","d"]};e(a,"exports",{template:f,data:[j]})}),a("samples/dyntemplates/dyntemplates.hsp.js",["hsp/$set","hsp/rt"],function(a){function b(){var a=h.view===f?g:f;d(h,"view",a)}var c=a.require,d=(a.exports,a.filename,a.dirname,c("hsp/$set")),e=c("hsp/rt").template(["ctxt"],function(a){var c,d;try{c=b}catch(e){c=a.g("swapTemplate")}try{d=ctxt}catch(e){d=a.g("ctxt")}var f={swapTemplate:"undefined"==typeof b?a.g("swapTemplate"):b,ctxt:"undefined"==typeof ctxt?a.g("ctxt"):ctxt};return[f,a.elt("div",0,0,0,[a.elt("a",{e1:[9,"swapTemplate()"]},{href:"javascript:void(0)"},{click:1},[a.$text(0,["Change template"])])]),a.cpt([null,"ctxt","view"],{e1:[9,"ctxt"]},{ctxt:["",1]},0)]}),f=c("hsp/rt").template(["ctxt"],function(a){var b;try{b=ctxt}catch(c){b=a.g("ctxt")}var d={ctxt:"undefined"==typeof ctxt?a.g("ctxt"):ctxt};return[d,a.elt("div",0,{"class":"msg"},0,[a.$text({e1:[9,"ctxt.msg"]},["A: ",1," "])])]}),g=c("hsp/rt").template(["ctxt"],function(a){var b;try{b=ctxt}catch(c){b=a.g("ctxt")}var d={ctxt:"undefined"==typeof ctxt?a.g("ctxt"):ctxt};return[d,a.elt("div",0,{"class":"msg"},0,[a.$text({e1:[9,"ctxt.msg2"]},["B: ",1," "])])]}),h={view:f,msg:"Hello World",msg2:"Always look on the bright side of life!"};d(a,"exports",{template:e,data:[h]})}),a("samples/gestures/gestures.hsp.js",["hsp/$set","hsp/gestures/index","hsp/rt"],function(a){function b(a){g.push(a.duration+"ms - "+a.type+" from "+a.target.tagName)}function c(){g.splice(0,g.length)}var d=a.require,e=(a.exports,a.filename,a.dirname,d("hsp/$set"));d("hsp/gestures/index").register();var f=d("hsp/rt").template(["msgList"],function(a){var d,e,f,g,h;try{d=b}catch(i){d=a.g("addMsg")}try{e=$event}catch(i){e=a.g("$event")}try{f=c}catch(i){f=a.g("clearMsg")}try{g=msgList}catch(i){g=a.g("msgList")}try{h=msg}catch(i){h=a.g("msg")}var j={addMsg:"undefined"==typeof b?a.g("addMsg"):b,$event:"undefined"==typeof $event?a.g("$event"):$event,clearMsg:"undefined"==typeof c?a.g("clearMsg"):c,msgList:"undefined"==typeof msgList?a.g("msgList"):msgList,msg:"undefined"==typeof msg?a.g("msg"):msg};return[j,a.elt("div",{e1:[9,"addMsg($event)"],e2:[9,"addMsg($event)"],e3:[9,"addMsg($event)"],e4:[9,"addMsg($event)"],e5:[9,"addMsg($event)"],e6:[9,"addMsg($event)"],e7:[9,"addMsg($event)"],e8:[9,"addMsg($event)"],e9:[9,"addMsg($event)"],e10:[9,"addMsg($event)"],e11:[9,"addMsg($event)"],e12:[9,"addMsg($event)"],e13:[9,"addMsg($event)"],e14:[9,"addMsg($event)"],e15:[9,"addMsg($event)"],e16:[9,"addMsg($event)"],e17:[9,"addMsg($event)"],e18:[9,"addMsg($event)"],e19:[9,"addMsg($event)"],e20:[9,"addMsg($event)"],e21:[9,"addMsg($event)"],e22:[9,"addMsg($event)"],e23:[9,"addMsg($event)"],e24:[9,"addMsg($event)"]},{"class":"touchboard",style:"height:200px; background: #27AAFC;text-align:center;"},{tap:1,tapstart:2,tapcancel:3,longpress:4,longpressstart:5,longpresscancel:6,singletap:7,singletapstart:8,singletapcancel:9,doubletap:10,doubletapstart:11,doubletapcancel:12,swipe:13,swipestart:14,swipemove:15,swipecancel:16,drag:17,dragstart:18,dragmove:19,dragcancel:20,pinch:21,pinchstart:22,pinchmove:23,pinchcancel:24},[a.elt("h1",0,0,0,[a.$text(0,["TOUCH ME"])])]),a.elt("div",0,{"class":"msglist",style:"min-height: 50px;"},0,[a.elt("div",{e1:[9,"clearMsg()"]},{style:"float:right; background: #27AAFC; padding:10px; margin-top:10px;"},{tap:1},[a.$text(0,["Clear logs"])]),a.$foreach({e1:[9,"msgList"]},"msg_key","msg",0,1,[a.elt("div",0,0,0,[a.$text({e1:[9,"msg"]},["",1])])]),a.$text(0,[" "])])]}),g=[];e(a,"exports",{template:f,data:[g]})}),a("samples/global/global.hsp.js",["hsp/$set","hsp/rt"],function(a){var b=a.require,c=(a.exports,a.filename,a.dirname,b("hsp/$set")),d=b("hsp/rt"),e=b("hsp/rt").template(["text","value"],function(a){var b,c;try{b=value}catch(d){b=a.g("value")}try{c=text}catch(d){c=a.g("text")}var e={value:"undefined"==typeof value?a.g("value"):value,text:"undefined"==typeof text?a.g("text"):text};return[e,a.$if({e1:[9,"value"]},1,[a.elt("div",0,0,0,[a.elt("div",0,{"class":"label"},0,[a.$text({e1:[9,"text"]},["",1])]),a.elt("div",0,{"class":"value"},0,[a.$text({e1:[9,"value"]},["",1])])])])]});c(d.global,"label",e),c(d.global,"ln",{personDetails:"Person details"});var f=b("hsp/rt").template(["person"],function(a){var b,c,d;try{b=ln}catch(e){b=a.g("ln")}try{c=person}catch(e){c=a.g("person")}try{d=label}catch(e){d=a.g("label")}var f={ln:"undefined"==typeof ln?a.g("ln"):ln,person:"undefined"==typeof person?a.g("person"):person,label:"undefined"==typeof label?a.g("label"):label};return[f,a.elt("div",{e1:[9,"ln.personDetails"]},{"class":"global",title:["",1]},0,[a.cpt([d,"label"],{e1:[9,"person.firstName"]},{text:"First Name: ",value:["",1]},0),a.cpt([d,"label"],{e1:[9,"person.lastName"]},{text:"Last Name: ",value:["",1]},0)])]});c(a,"exports",{template:f,data:[{firstName:"Homer",lastName:"Simpson"}]})}),a("samples/helloworld/hello.hsp.js",["hsp/$set","hsp/rt"],function(a){var b=a.require,c=(a.exports,a.filename,a.dirname,b("hsp/$set")),d=b("hsp/rt").template(["name"],function(a){var b;try{b=name}catch(c){b=a.g("name")}var d={name:"undefined"==typeof name?a.g("name"):name};return[d,a.elt("div",0,{"class":"msg"},0,[a.$text({e1:[9,"name"]},["Hello ",1,"! "])])]});c(a,"exports",{template:d,data:["World"]})}),a("samples/inputonupdate/inputonupdate.hsp.js",["hsp/$set","hsp/rt"],function(a){var b=a.require,c=(a.exports,a.filename,a.dirname,b("hsp/$set")),d=b("hsp/rt").template(["data"],function(a){var b,c;try{b=data}catch(d){b=a.g("data")}try{c=$event}catch(d){c=a.g("$event")}var e={data:"undefined"==typeof data?a.g("data"):data,$event:"undefined"==typeof $event?a.g("$event"):$event};return[e,a.elt("div",0,{"class":"info2"},0,[a.$text(0,["Input field with a standard timer of 500ms:"])]),a.elt("div",0,{"class":"section"},0,[a.elt("input",{e1:[9,"data.comment"],e2:[9,"data.updateHandler($event)"]},{type:"text",model:["",1]},{update:2}),a.elt("br",0,0,0),a.elt("span",0,0,0,[a.$text({e1:[9,"data.delayed"]},["Oninput result: ",1])])]),a.elt("div",0,{"class":"info2"},0,[a.$text(0,["Input field with a longer timer of 2000ms:"])]),a.elt("div",0,{"class":"section"},0,[a.elt("input",{e1:[9,"data.comment2"],e2:[9,"data.updateHandler2($event)"]},{type:"text",model:["",1],"update-timeout":"2000"},{update:2}),a.elt("br",0,0,0),a.elt("span",0,0,0,[a.$text({e1:[9,"data.delayed2"]},["Oninput result: ",1])])]),a.elt("div",0,{"class":"info2"},0,[a.$text(0,["Textarea with a standard timer of 500ms:"])]),a.elt("div",0,{"class":"section"},0,[a.elt("textarea",{e1:[9,"data.comment3"],e2:[9,"data.updateHandler3($event)"]},{rows:"4",cols:"40",model:["",1]},{update:2}),a.elt("br",0,0,0),a.elt("span",0,0,0,[a.$text({e1:[9,"data.delayed3"]},["Oninput result: ",1])])])]}),e={comment:"Edit me and wait!",delayed:"",updateHandler:function(a){c(this,"delayed",a.target.value)},comment2:"Edit me and wait more!",delayed2:"",updateHandler2:function(a){c(this,"delayed2",a.target.value)},comment3:"Edit me and wait!",delayed3:"",updateHandler3:function(a){c(this,"delayed3",a.target.value)}};c(a,"exports",{template:d,data:[e]})}),a("samples/inputsample/inputsample.hsp.js",["hsp/$set","hsp/rt"],function(a){var b=a.require,c=(a.exports,a.filename,a.dirname,b("hsp/$set")),d=b("hsp/rt").template(["data"],function(a){var b;try{b=data}catch(c){b=a.g("data")}var d={data:"undefined"==typeof data?a.g("data"):data};return[d,a.elt("div",0,{"class":"info2"},0,[a.$text(0,["All the following inputs are synchronized:"])]),a.elt("div",0,{"class":"section"},0,[a.$text(0,["Comment #1: "]),a.elt("input",{e1:[9,"data.comment"]},{type:"text",value:["",1]},0),a.elt("br",0,0,0),a.$text(0,["Comment #2: "]),a.elt("input",{e1:[9,"data.comment"]},{type:"text",model:["",1]},0),a.elt("br",0,0,0),a.$text(0,["Comment #3: "]),a.elt("span",0,{"class":"textValue"},0,[a.$text({e1:[9,"data.comment"]},["",1])])]),a.elt("div",0,{"class":"section"},0,[a.elt("input",{e1:[9,"data.isChecked"]},{id:"cb1",type:"checkbox",value:["",1]},0),a.elt("label",0,{"for":"cb1"},0,[a.$text(0,["Check me!"])]),a.$text(0,[" -  "]),a.elt("input",{e1:[9,"data.isChecked"]},{id:"cb2",type:"checkbox",model:["",1]},0),a.elt("label",0,{"for":"cb2"},0,[a.$text(0,["Check me (2)!"])]),a.$text(0,[" - Checked: "]),a.elt("span",0,{"class":"textValue"},0,[a.$text({e1:[9,"data.isChecked"]},["",1])])]),a.elt("div",0,{"class":"section"},0,[a.elt("input",{e1:[9,"data.selection"]},{id:"rb1",type:"radio",model:["",1],value:"A"},0),a.elt("label",0,{"for":"rb1"},0,[a.$text(0,["Select A"])]),a.$text(0,[" -  "]),a.elt("input",{e1:[9,"data.selection"]},{id:"rb2",type:"radio",model:["",1],value:"B"},0),a.elt("label",0,{"for":"rb2"},0,[a.$text(0,["Select B"])]),a.$text(0,[" -  "]),a.elt("input",{e1:[9,"data.selection"]},{id:"rb3",type:"radio",model:["",1],value:"C"},0),a.elt("label",0,{"for":"rb3"},0,[a.$text(0,["Select C"])]),a.$text(0,[" - Selection in model:"]),a.elt("span",0,{"class":"textValue"},0,[a.$text({e1:[9,"data.selection"]},["",1])])]),a.elt("div",0,{"class":"section"},0,[a.$text(0,["Input with dynamic type: "]),a.elt("input",{e1:[9,"data.dtype"],e2:[9,"data.comment"]},{type:["",1],value:["",2],style:"width:100px"},0),a.$text(0,[" - change type: "]),a.elt("input",{e1:[9,"data.dtype"]},{type:"text",value:["",1],style:"width:100px"},0)])]}),e={comment:"edit me!",isChecked:!1,selection:"B",dtype:"text"};c(a,"exports",{template:d,data:[e]})}),a("samples/let/let.hsp.js",["hsp/$set","hsp/rt"],function(a){function b(){g++,d(f.part1.part11,"msg","(1.1 update: "+g+")"),d(f.part2.part21,"msg","(2.1 update: "+g+")")}var c=a.require,d=(a.exports,a.filename,a.dirname,c("hsp/$set")),e=c("hsp/rt").template(["m"],function(a){var c,d,e,f,g;try{c=m}catch(h){c=a.g("m")}try{d=p1}catch(h){d=a.g("p1")}try{e=p11}catch(h){e=a.g("p11")}try{f=m21}catch(h){f=a.g("m21")}try{g=b}catch(h){g=a.g("updateModel")}var i={m:"undefined"==typeof m?a.g("m"):m,p1:"undefined"==typeof p1?a.g("p1"):p1,p11:"undefined"==typeof p11?a.g("p11"):p11,m21:"undefined"==typeof m21?a.g("m21"):m21,updateModel:"undefined"==typeof b?a.g("updateModel"):b};return[i,a.let({e1:[9,'p1=m.part1, m21=m.part2.part21.msg+"!"']}),a.elt("div",0,0,0,[a.let({e1:[9,"p11=p1.part11"]}),a.$text(0,["Part 1.1: "]),a.elt("span",0,{"class":"textValue"},0,[a.$text({e1:[9,"p11.msg"]},["",1])]),a.elt("br",0,0,0)],1),a.elt("div",0,0,0,[a.$text(0,["Part 2.1: "]),a.elt("span",0,{"class":"textValue"},0,[a.$text({e1:[9,"m21"]},["",1])]),a.$text(0,[" - "]),a.$if({e1:[9,"!p11"]},1,[a.$text(0,["p11 is of course not visible in the 2nd element scope "])])]),a.elt("a",{e1:[9,"updateModel()"]},{href:"javascript:void(0)"},{click:1},[a.$text(0,["Change Model"])])]}),f={part1:{part11:{msg:"Message 1.1"}},part2:{part21:{msg:"Message 2.1"}}},g=0;d(a,"exports",{template:e,data:[f]})}),a("samples/list1/list.hsp.js",["hsp/$set","hsp/klass","hsp/rt"],function(a){function b(){g(m,"preferredOption",m.preferredOption?null:"My favourite things")}function c(){m.items.splice(0,m.items.length)}function e(){l++;for(var a=0;l>a;a++)g(m.items,a,"Item #"+(a+1)+" (change "+l+")")}var f=a.require,g=(a.exports,a.filename,a.dirname,f("hsp/$set")),h=f("hsp/klass"),i=h({$attributes:{"class":{type:"string",binding:"1-way"},onclick:{type:"callback"},head:{type:"template"}},$elements:{option:{type:"template"},separator:{type:"template"}}}),j=f("hsp/rt").template({ctl:[i,"ListController"],ref:"lc"},function(a){var b,c,d,e;try{b=lc}catch(f){b=a.g("lc")}try{c=itm}catch(f){c=a.g("itm")}try{d=itm_isfirst}catch(f){d=a.g("itm_isfirst")}try{e=itm_islast}catch(f){e=a.g("itm_islast")}var g={lc:"undefined"==typeof lc?a.g("lc"):lc,itm:"undefined"==typeof itm?a.g("itm"):itm,itm_isfirst:"undefined"==typeof itm_isfirst?a.g("itm_isfirst"):itm_isfirst,itm_islast:"undefined"==typeof itm_islast?a.g("itm_islast"):itm_islast};return[g,a.$text(0,[" "]),a.elt("div",{e1:[9,"lc.class"]},{"class":["list ",1]},0,[a.$if({e1:[9,"lc.head"]},1,[a.elt("div",0,{"class":"head"},0,[a.cpt([null,"lc","head"],0,0,0)])]),a.$if({e1:[9,"!lc.$content"]},1,[a.elt("span",0,{"class":"nodata"},0,[a.$text(0,["Empty list"])])],[a.elt("ul",0,{"class":"noTextSelection"},0,[a.$foreach({e1:[9,"lc.$content"]},"idx","itm",0,1,[a.$if({e1:[9,'itm.tagName==="@option"']},1,[a.elt("li",0,{"class":"opt"},0,[a.cpt([null,"itm"],0,0,0)])],[a.$if({e1:[9,'itm.tagName==="@separator" &&  !itm_isfirst && !itm_islast']},1,[a.elt("hr",0,0,0)])])]),a.$text(0,[" "])])])])]}),k=f("hsp/rt").template(["d"],function(a){var f,g,h,i,k,l,m;try{f=d}catch(n){f=a.g("d")}try{g=j}catch(n){g=a.g("list")}try{h=b}catch(n){h=a.g("toggle")}try{i=c}catch(n){i=a.g("empty")}try{k=e}catch(n){k=a.g("update")}try{l=idx}catch(n){l=a.g("idx")}try{m=itm}catch(n){m=a.g("itm")}var o={d:"undefined"==typeof d?a.g("d"):d,list:"undefined"==typeof j?a.g("list"):j,toggle:"undefined"==typeof b?a.g("toggle"):b,empty:"undefined"==typeof c?a.g("empty"):c,update:"undefined"==typeof e?a.g("update"):e,idx:"undefined"==typeof idx?a.g("idx"):idx,itm:"undefined"==typeof itm?a.g("itm"):itm};return[o,a.cpt([g,"list"],0,{head:"Static list","class":"listcpt"},0,[a.catt("option",0,0,0,[a.$text({e1:[9,"d.itemName"]},["First ",1])]),a.catt("option",0,0,0,[a.$text({e1:[9,"d.itemName"]},["Second ",1])])]),a.$text(0,[" "]),a.cpt([g,"list"],0,{"class":"listcpt"},0,[a.catt("head",0,0,0,[a.$text(0,["Dynamic list: "]),a.elt("a",{e1:[9,"toggle()"]},{href:"javascript:void(0)"},{click:1},[a.$text(0,["Toggle favourite"])]),a.$text(0,[" - "]),a.elt("a",{e1:[9,"empty()"]},{href:"javascript:void(0)"},{click:1},[a.$text(0,["Empty"])]),a.$text(0,[" - "]),a.elt("a",{e1:[9,"update()"]},{href:"javascript:void(0)"},{click:1},[a.$text(0,["Update list"])])]),a.$if({e1:[9,"d.preferredOption"]},1,[a.catt("option",0,0,0,[a.$text({e1:[9,"d.preferredOption"]},["",1," (!)"])]),a.catt("separator",0,0,0)]),a.$foreach({e1:[9,"d.items"]},"idx","itm",0,1,[a.catt("option",0,0,0,[a.$text({e1:[9,"idx+1"],e2:[9,"itm"]},["",1,". ",2])])]),a.$text(0,[" "])])]}),l=0,m={itemName:"item",preferredOption:"My favourite things",items:["Kind of blue","Something else","Winter moon"]};g(a,"exports",{template:k,data:[m]})}),a("samples/list2/list.hsp.js",["hsp/$set","hsp/klass","hsp/rt"],function(a){function b(){n.items.splice(0,n.items.length)}function c(){m++;for(var a=0;m>a;a++)g(n.items,a,"Item #"+(a+1)+" (change "+m+")")}function e(a){g(n,"selectedItem",a)}var f=a.require,g=(a.exports,a.filename,a.dirname,f("hsp/$set")),h=f("hsp/klass"),i=h({$attributes:{value:{type:"string",binding:"1-way"},label:{type:"template"}},$init:function(){g(this,"selected",!1)}}),j=h({$attributes:{"class":{type:"string",binding:"1-way"},onselect:{type:"callback"},head:{type:"template"}},$elements:{option:{type:"component",controller:i},separator:{type:"template"}},select:function(a){for(var b=this.$content,c=0,d=b.length;d>c;c++)"@option"===b[c].tagName&&g(b[c],"selected",b[c].value===a);this.onselect({value:a})}}),k=f("hsp/rt").template({ctl:[j,"ListCtrl"],ref:"lc"},function(a){var b,c,d,e;try{b=lc}catch(f){b=a.g("lc")}try{c=itm}catch(f){c=a.g("itm")}try{d=itm_isfirst}catch(f){d=a.g("itm_isfirst")}try{e=itm_islast}catch(f){e=a.g("itm_islast")}var g={lc:"undefined"==typeof lc?a.g("lc"):lc,itm:"undefined"==typeof itm?a.g("itm"):itm,itm_isfirst:"undefined"==typeof itm_isfirst?a.g("itm_isfirst"):itm_isfirst,itm_islast:"undefined"==typeof itm_islast?a.g("itm_islast"):itm_islast};return[g,a.$text(0,[" "]),a.elt("div",{e1:[9,"lc.class"]},{"class":["list ",1]},0,[a.$if({e1:[9,"lc.head"]},1,[a.elt("div",0,{"class":"head"},0,[a.cpt([null,"lc","head"],0,0,0)])]),a.$if({e1:[9,"!lc.$content"]},1,[a.elt("span",0,{"class":"nodata"},0,[a.$text(0,["Empty list"])])],[a.elt("ul",0,{"class":"noTextSelection"},0,[a.$foreach({e1:[9,"lc.$content"]},"idx","itm",0,1,[a.$if({e1:[9,'itm.tagName==="@option"']},1,[a.elt("li",{e1:[9,"lc.select(itm.value)"]},{"class":"opt"},{click:1},[a.elt("span",{e1:[9,"{'highlight':itm.selected}"]},{"class":["item ",1]},0,[a.cpt([null,"itm","label"],0,0,0)])])],[a.$if({e1:[9,'itm.tagName==="@separator" &&  !itm_isfirst && !itm_islast']},1,[a.elt("hr",0,0,0)])])]),a.$text(0,[" "])])])])]}),l=f("hsp/rt").template(["d"],function(a){var f,g,h,i,j,l,m,n;try{f=e}catch(o){f=a.g("showSelection")}try{g=$event}catch(o){g=a.g("$event")}try{h=d}catch(o){h=a.g("d")}try{i=k}catch(o){i=a.g("list")}try{j=b}catch(o){j=a.g("empty")}try{l=c}catch(o){l=a.g("update")}try{m=idx}catch(o){m=a.g("idx")}try{n=itm}catch(o){n=a.g("itm")}var p={showSelection:"undefined"==typeof e?a.g("showSelection"):e,$event:"undefined"==typeof $event?a.g("$event"):$event,d:"undefined"==typeof d?a.g("d"):d,list:"undefined"==typeof k?a.g("list"):k,empty:"undefined"==typeof b?a.g("empty"):b,update:"undefined"==typeof c?a.g("update"):c,idx:"undefined"==typeof idx?a.g("idx"):idx,itm:"undefined"==typeof itm?a.g("itm"):itm};return[p,a.$text(0,["Click on an item to select it:  "]),a.cpt([i,"list"],{e1:[9,"showSelection($event.value)"]},{head:"Static list","class":"listcpt"},{select:1},[a.catt("option",{e1:[9,"d.itemName"]},{value:"A",label:["First ",1]},0),a.catt("option",0,{value:"B"},0,[a.$text({e1:[9,"d.itemName"]},["Second ",1])])]),a.$text(0,[" "]),a.cpt([i,"list"],{e1:[9,"showSelection($event.value)"]},{"class":"listcpt"},{select:1},[a.catt("head",0,0,0,[a.$text(0,["Dynamic list: "]),a.elt("a",{e1:[9,"empty()"]},{href:"javascript:void(0)"},{click:1},[a.$text(0,["Empty"])]),a.$text(0,[" - "]),a.elt("a",{e1:[9,"update()"]},{href:"javascript:void(0)"},{click:1},[a.$text(0,["Update list"])])]),a.$foreach({e1:[9,"d.items"]},"idx","itm",0,1,[a.catt("option",{e1:[9,"idx"]},{value:["K",1]},0,[a.$text({e1:[9,"idx+1"],e2:[9,"itm"]},["",1,". ",2])])]),a.$text(0,[" "])]),a.$text(0,[" "]),a.$if({e1:[9,"d.selectedItem!==null"]},1,[a.$text({e1:[9,"d.selectedItem"]},["Last selected value: ",1])])]
}),m=0,n={itemName:"item",items:["Kind of blue","Something else","Winter moon"]};g(a,"exports",{template:l,data:[n]})}),a("samples/listsorting/list.hsp.js",["hsp/$set","hsp/rt"],function(a){var b=a.require,c=(a.exports,a.filename,a.dirname,b("hsp/$set")),d=b("hsp/rt").template(["persons"],function(a){var b,c,d,e,f;try{b=persons}catch(g){b=a.g("persons")}try{c=orderBy}catch(g){c=a.g("orderBy")}try{d=p}catch(g){d=a.g("p")}try{e=Sorter}catch(g){e=a.g("Sorter")}try{f=nameSorter}catch(g){f=a.g("nameSorter")}var h={persons:"undefined"==typeof persons?a.g("persons"):persons,orderBy:"undefined"==typeof orderBy?a.g("orderBy"):orderBy,p:"undefined"==typeof p?a.g("p"):p,Sorter:"undefined"==typeof Sorter?a.g("Sorter"):Sorter,nameSorter:"undefined"==typeof nameSorter?a.g("nameSorter"):nameSorter};return[h,a.elt("div",0,0,{selectstart:"return false"},[a.elt("div",0,{"class":"msg"},0,[a.elt("span",0,{"class":"info"},0,[a.$text(0,["List sorted with the orderBy() function: "])]),a.elt("ol",0,0,0,[a.$foreach({e1:[9,'persons|orderBy:"name"']},"p_key","p",0,1,[a.elt("li",0,0,0,[a.$text({e1:[9,"p.name"]},["",1])])]),a.$text(0,[" "])])]),a.elt("hr",0,0,0),a.elt("div",0,{"class":"msg"},0,[a.let({e1:[9,'nameSorter=new Sorter({property:"name",states:"ADN"})']}),a.elt("span",0,{"class":"info"},0,[a.$text({e1:[9,"nameSorter.state"]},["List sorted with a Sorter object (current state: ",1,") "])]),a.elt("ol",0,0,0,[a.$foreach({e1:[9,"persons|nameSorter"]},"p_key","p",0,1,[a.elt("li",0,0,0,[a.$text({e1:[9,"p.name"]},["",1])])]),a.$text(0,[" "])]),a.elt("a",{e1:[9,"nameSorter.nextState()"]},0,{click:1},[a.$text(0,["Change sort order"])])],1)])]}),e=[{name:"Homer",age:38},{name:"Marge",age:38},{name:"Bart",age:10},{name:"Lisa",age:8},{name:"Maggie",age:1}];c(a,"exports",{template:d,data:[e]})}),a("samples/listupdate/list.hsp.js",["hsp/$set","hsp/rt"],function(a){function b(){i++,h.splice(1,0,{firstName:"John",lastName:"Doe"+i})}function c(){h.shift()}function d(){h.splice2(0,h.length,[{firstName:"Charlie",lastName:"Parker"},{firstName:"Sonny",lastName:"Stitt"},{firstName:"Cannonball",lastName:"Adderley"},{firstName:"Stefano",lastName:"Di Battista"},{firstName:"Kenny",lastName:"Garrett"}])}var e=a.require,f=(a.exports,a.filename,a.dirname,e("hsp/$set")),g=e("hsp/rt").template(["persons"],function(a){var e,f,g,i,j,k,l;try{e=b}catch(m){e=a.g("addElement")}try{f=c}catch(m){f=a.g("deleteElement")}try{g=d}catch(m){g=a.g("changeAll")}try{i=h}catch(m){i=a.g("persons")}try{j=p}catch(m){j=a.g("p")}try{k=p_isfirst}catch(m){k=a.g("p_isfirst")}try{l=p_islast}catch(m){l=a.g("p_islast")}var n={addElement:"undefined"==typeof b?a.g("addElement"):b,deleteElement:"undefined"==typeof c?a.g("deleteElement"):c,changeAll:"undefined"==typeof d?a.g("changeAll"):d,persons:"undefined"==typeof h?a.g("persons"):h,p:"undefined"==typeof p?a.g("p"):p,p_isfirst:"undefined"==typeof p_isfirst?a.g("p_isfirst"):p_isfirst,p_islast:"undefined"==typeof p_islast?a.g("p_islast"):p_islast};return[n,a.elt("div",0,0,0,[a.elt("div",0,{"class":"msg"},0,[a.elt("a",{e1:[9,"addElement()"]},{href:"javascript:void(0)"},{click:1},[a.$text(0,["Add element"])]),a.$text(0,[" - "]),a.elt("a",{e1:[9,"deleteElement()"]},{href:"javascript:void(0)"},{click:1},[a.$text(0,["Delete element"])]),a.$text(0,[" - "]),a.elt("a",{e1:[9,"changeAll()"]},{href:"javascript:void(0)"},{click:1},[a.$text(0,["Change all elements"])])]),a.elt("ol",0,0,0,[a.$foreach({e1:[9,"persons"]},"p_key","p",0,1,[a.elt("li",0,0,0,[a.$text({e1:[9,"p.firstName"],e2:[9,"p.lastName"]},["",1," ",2," "]),a.$if({e1:[9,"p_isfirst"]},1,[a.elt("span",0,{"class":"info"},0,[a.$text(0,["(first)"])])]),a.$if({e1:[9,"p_islast"]},1,[a.elt("span",0,{"class":"info"},0,[a.$text(0,["(last)"])])])])]),a.$text(0,[" "])])]),a.elt("div",0,{"class":"msg"},0,[a.$text({e1:[9,"persons.length"]},["Number of people in the list: ",1," "])])]}),h=[{firstName:"Homer",lastName:"Simpsons"},{firstName:"Marge",lastName:"Simpsons"},{firstName:"Bart"},{firstName:"Lisa"},{firstName:"Maggy"}],i=0;f(a,"exports",{template:g,data:[h]})}),a("samples/logs/logs.hsp.js",["hsp/$set","hsp/rt/log","hsp/rt"],function(a){function b(){var a=j.length+1;j.push({name:"City "+a,code:"C"+a})}function c(){j.shift()}function d(){i.splice(0,i.length)}var e=a.require,f=(a.exports,a.filename,a.dirname,e("hsp/$set")),g=e("hsp/rt/log"),h=e("hsp/rt").template(["cities","logs"],function(a){var e,f,g,h,k,l,m,n,o;try{e=$scope}catch(p){e=a.g("$scope")}try{f=b}catch(p){f=a.g("increaseList")}try{g=c}catch(p){g=a.g("decreaseList")}try{h=d}catch(p){h=a.g("clearLogs")}try{k=j}catch(p){k=a.g("cities")}try{l=idx}catch(p){l=a.g("idx")}try{m=city}catch(p){m=a.g("city")}try{n=i}catch(p){n=a.g("logs")}try{o=msg}catch(p){o=a.g("msg")}var q={$scope:"undefined"==typeof $scope?a.g("$scope"):$scope,increaseList:"undefined"==typeof b?a.g("increaseList"):b,decreaseList:"undefined"==typeof c?a.g("decreaseList"):c,clearLogs:"undefined"==typeof d?a.g("clearLogs"):d,cities:"undefined"==typeof j?a.g("cities"):j,idx:"undefined"==typeof idx?a.g("idx"):idx,city:"undefined"==typeof city?a.g("city"):city,logs:"undefined"==typeof i?a.g("logs"):i,msg:"undefined"==typeof msg?a.g("msg"):msg};return[q,a.log({e1:[9,'"top-level:",$scope']},"inline.js","",6,3),a.elt("a",{e1:[9,"increaseList()"]},{href:"javascript:void(0)"},{click:1},[a.$text(0,["Increase list"])]),a.$text(0,[" - "]),a.elt("a",{e1:[9,"decreaseList()"]},{href:"javascript:void(0)"},{click:1},[a.$text(0,["Decrease list"])]),a.$text(0,[" - "]),a.elt("a",{e1:[9,"clearLogs()"]},{href:"javascript:void(0)"},{click:1},[a.$text(0,["Clear logs"])]),a.elt("ul",0,0,0,[a.$foreach({e1:[9,"cities"]},"idx","city",0,1,[a.log({e1:[9,'"item #"+idx+":", city']},"inline.js","",12,7),a.elt("li",0,0,0,[a.$text({e1:[9,"idx+1"],e2:[9,"city.name"]},["",1,". ",2])])]),a.$text(0,[" "])]),a.elt("div",0,{"class":"logsection"},0,[a.$text(0,["Logs: "]),a.elt("ul",0,{"class":"logs"},0,[a.$foreach({e1:[9,"logs"]},"msg_key","msg",0,1,[a.elt("li",0,0,0,[a.elt("span",0,{"class":"ctxt"},0,[a.$text({e1:[9,"msg.file"],e2:[9,"msg.line"],e3:[9,"msg.column"]},[" [",1," ",2,":",3,"] "])]),a.elt("span",0,{"class":"msg"},0,[a.$text({e1:[9,"msg.message"]},[" ",1," "])])])]),a.$text(0,[" "])])])]}),i=[];g.addLogger(function(a){return i.push(a),!1});var j=[{name:"Paris",code:"PAR"},{name:"London",code:"LON"},{name:"New York",code:"NYC"}];f(a,"exports",{template:h,data:[j,i]})}),a("samples/modifiers/modifiers.hsp.js",["hsp/$set","hsp/klass","hsp/rt"],function(a){function b(a,b){return"upper"===b?(""+a).toUpperCase():"lower"===b?(""+a).toLowerCase():a}var c=a.require,e=(a.exports,a.filename,a.dirname,c("hsp/$set")),f=c("hsp/klass"),g=f({$constructor:function(a){e(this,"ascending",!0),e(this,"pp",a)},apply:function(a){for(var b=[],c=this.pp,d=this.ascending,f=0,g=a.length;g>f;f++)e(b,f,a[f]);return b.sort(function(a,b){return a[c]>b[c]?d?1:-1:a[c]==b[c]?0:d?-1:1}),b},toggleOrder:function(){e(this,"ascending",!this.ascending)}}),h=c("hsp/rt").template(["d"],function(a){var c,e,f,h,i;try{c=d}catch(j){c=a.g("d")}try{e=b}catch(j){e=a.g("changeCase")}try{f=g}catch(j){f=a.g("Sorter")}try{h=sortByName}catch(j){h=a.g("sortByName")}try{i=p}catch(j){i=a.g("p")}var k={d:"undefined"==typeof d?a.g("d"):d,changeCase:"undefined"==typeof b?a.g("changeCase"):b,Sorter:"undefined"==typeof g?a.g("Sorter"):g,sortByName:"undefined"==typeof sortByName?a.g("sortByName"):sortByName,p:"undefined"==typeof p?a.g("p"):p};return[k,a.elt("div",0,{"class":"section2"},0,[a.$text(0,["Message in capital letters: "]),a.elt("span",0,{"class":"textvalue"},0,[a.$text({e1:[9,'d.msg|changeCase:"upper"']},["",1])]),a.elt("br",0,0,0),a.$text(0,["Message in lower case: "]),a.elt("span",0,{"class":"textvalue"},0,[a.$text({e1:[9,'d.msg|changeCase:"lower"']},["",1])])]),a.elt("div",0,{"class":"section2"},0,[a.let({e1:[9,'sortByName=new Sorter("firstName")']}),a.$text(0,["Sorted list: "]),a.elt("ol",0,0,0,[a.$foreach({e1:[9,"d.persons|sortByName"]},"p_key","p",0,1,[a.elt("li",0,0,0,[a.$text({e1:[9,"p.firstName"],e2:[9,"p.lastName"]},["",1," ",2," "])])]),a.$text(0,[" "])]),a.elt("a",{e1:[9,"sortByName.toggleOrder()"]},0,{click:1},[a.$text({e1:[9,'sortByName.ascending? "ascending" : "descending"']},["Toggle sort order (current: ",1,") "])])],1)]}),i={msg:"Hello Simpsons!",persons:[{firstName:"Homer",lastName:"Simpsons"},{firstName:"Marge",lastName:"Simpsons"},{firstName:"Bart"},{firstName:"Lisa"},{firstName:"Maggy"}]};e(a,"exports",{template:h,data:[i]})}),a("samples/panel/panel.hsp.js",["hsp/$set","hsp/klass","hsp/rt"],function(a){function b(a){k+=a,e(j,"text","Hello World ("+k+")")}var d=a.require,e=(a.exports,a.filename,a.dirname,d("hsp/$set")),f=d("hsp/klass"),g=f({$attributes:{head:{type:"template"},body:{type:"template",defaultContent:!0}}}),h=d("hsp/rt").template({ctl:[g,"PanelController"],ref:"c"},function(a){var b;try{b=c}catch(d){b=a.g("c")}var e={c:"undefined"==typeof c?a.g("c"):c};return[e,a.elt("div",0,{"class":"panel"},0,[a.$if({e1:[9,"c.head"]},1,[a.elt("div",0,{"class":"head"},0,[a.$text(0,[" "]),a.cpt([null,"c","head"],0,0,0),a.$text(0,[" "])])]),a.elt("div",0,{"class":"body"},0,[a.cpt([null,"c","body"],0,0,0)])])]}),i=d("hsp/rt").template(["m"],function(a){var c,d,e;try{c=m}catch(f){c=a.g("m")}try{d=h}catch(f){d=a.g("panel")}try{e=b}catch(f){e=a.g("update")}var g={m:"undefined"==typeof m?a.g("m"):m,panel:"undefined"==typeof h?a.g("panel"):h,update:"undefined"==typeof b?a.g("update"):b};return[g,a.cpt([d,"panel"],{e1:[9,"m.text"]},{body:["Panel A (headless): ",1]},0),a.$text(0,[" "]),a.cpt([d,"panel"],{e1:[9,"m.text"]},{head:["Panel B (",1,"!)"]},0,[a.$text({e1:[9,"m.text"]},["",1,"! "]),a.elt("a",{e1:[9,"update(1)"]},{href:"javascript:void(0)"},{click:1},[a.$text(0,["Update model"])])]),a.$text(0,[" "]),a.cpt([d,"panel"],0,0,0,[a.catt("head",0,0,0,[a.$text(0,["Panel C: "]),a.elt("a",{e1:[9,"update(10)"]},{href:"javascript:void(0)"},{click:1},[a.$text(0,["Update model"])])]),a.catt("body",0,0,0,[a.$text({e1:[9,"m.text"]},["",1,"! "]),a.elt("a",{e1:[9,"update(100)"]},{href:"javascript:void(0)"},{click:1},[a.$text(0,["Update model"])])])])]}),j={text:"Hello World"},k=0;e(a,"exports",{template:i,data:[j]})}),a("samples/samples.js",["/samples/helloworld/hello.hsp.js","/samples/timer/timer.hsp.js","/samples/clickhandler/clickhandler.hsp.js","/samples/conditions/conditions.hsp.js","/samples/simplelist/simplelist.hsp.js","/samples/listupdate/list.hsp.js","/samples/listsorting/list.hsp.js","/samples/dynpath/dynpath.hsp.js","/samples/todolist/todolist.hsp.js","/samples/let/let.hsp.js","/samples/modifiers/modifiers.hsp.js","/samples/logs/logs.hsp.js","/samples/cssclass/cssclass.hsp.js","/samples/global/global.hsp.js","/samples/dyntemplates/dyntemplates.hsp.js","/samples/inputsample/inputsample.hsp.js","/samples/selectsample/selectsample.hsp.js","/samples/textarea/textarea.hsp.js","/samples/inputonupdate/inputonupdate.hsp.js","/samples/subtemplates/subtemplates.hsp.js","/samples/component1/timer.hsp.js","/samples/clock/clock.hsp.js","/samples/component2/nbrfield.hsp.js","/samples/component3/pagination.hsp.js","/samples/panel/panel.hsp.js","/samples/list1/list.hsp.js","/samples/list2/list.hsp.js","/samples/tabbar/tabbar.hsp.js","/samples/thirdpartycpts/chart.hsp.js","/samples/gestures/gestures.hsp.js"],function(a){{var b=a.require;a.exports,a.filename,a.dirname}a.exports=[{title:"Hello World",folder:"helloworld",files:[{src:"hello.hsp",main:!0,text:'<!--\nedit me!\n-->\n\n<template hello(name)>\n    <div class="msg">\n        Hello {name}!\n    </div>\n</template>\n\n<script>\n// Needed by the playground application.\n// Update it, but do not remove it!\nmodule.exports = {\n  template: hello,\n  data: ["World"]\n};\n</script>'}],description:'<p>Here is one of the simplest example that can be written with Hashspace</p>\n[#output]\n<h4 id="how-does-it-work-">How does it work?</h4>\n<p>Actually it is quite simple: Hashspace uses an offline compiler to <strong>transform templates into JavaScript functions</strong> that have the same name and arguments as the template definition.</p>\n<p>Then calling the template function generates a <strong>template node</strong> that can be inserted in the DOM through its <strong>render()</strong> method.</p>\n<p>As templates are functions, it means that the same template can be used to generate multiple fragments of the same DOM - usually with different arguments, of course.</p>\n<p>As Hashspace currently relies on a <a href="http://www.commonjs.org/">commonJS</a> dependency manager, it also means that templates can be easily exported to be used from other files (cf. <em>sub-template</em> example).</p>\n<p>To be able to execute the sample code you can read on the left, the playground needs to know which template function\nhas to be executed, and what data to be injected.</p>\n<p>Hence this code at the bottom:</p>\n<pre><code class="lang-javascript">module.exports = {\n  template: hello, <span class="comment">// javascript reference to the template function</span>\n  data: [ <span class="string">"World"</span> ] <span class="comment">// the data to be injected</span>\n}</code></pre>\n<p>Each sample will declare this export object to be compatible with the playground application.</p>\n<p><em>NB: In future releases, Hashspace should provide compilation options to generate code independent from commonJS so that any module system can be used</em></p>\n\n',sample:b("/samples/helloworld/hello.hsp.js")},{category:"Getting started"},{title:"Data-binding: timer example",folder:"timer",files:[{src:"timer.hsp",main:!0,text:'<script>\nvar klass=require("hsp/klass");\n</script>\n\n<template elapsedTime(timer)>\n    Seconds Elapsed: {timer.secondsElapsed}\n</template>\n\n<script>\n// klass is a little utility to create a JS object constructor\n// from a simple JSON structure - main goals are to\n// to simplify prototypal inheritance and ease code reading\nvar Timer=klass({\n    $constructor:function() {\n        this.secondsElapsed=0;\n        this._iid=setInterval(this.tick.bind(this),1000);\n    },\n    $dispose:function() {\n        clearInterval(this._iid);\n    },\n    tick:function() {\n        this.secondsElapsed++;\n    }\n});\n\n// Needed by the playground application.\n// Update it, but do not remove it!\nmodule.exports = {\n    template: elapsedTime,\n    data: function() {\n        return [new Timer()];\n    }\n};\n</script>\n'}],description:'<p>This example originally demonstrated in the <a href="http://facebook.github.io/react/">react framework</a> documentation shows a simple example of data-binding. The timer object is updated every second, and the elapsed time is automatically updated in the DOM element managed by the template.</p>\n[#output]\n<p>To implement data-binding <strong>Hashspace reprocesses JavaScript</strong> to introduce a partial polyfill to <a href="http://updates.html5rocks.com/2012/11/Respond-to-change-with-Object-observe">Object.observe</a> and detect changes that occur to JavaScript objects. Hashspace actually uses a transpiler to encapsulate assignments with an internal <strong>$set()</strong> method that performs the assignment and notifies the potential observers. You can see the result by looking for the <em>timer.hsp</em> file in your JavaScript debugger.</p>\n<p>In the mid-term the <em>$set()</em> utility will become obsolete once the <a href="http://updates.html5rocks.com/2012/11/Respond-to-change-with-Object-observe">Object.observe</a> feature is implemented by all web-browsers - and Hashspace will rely on the browser&#39;s Object.observe implementation.</p>\n<p>The $set function has the following signature:</p>\n<pre><code>$<span class="operator"><span class="keyword">set</span>(object_or_array, propertyName_or_index, <span class="keyword">value</span>);</span></code></pre>\n<p>(This will perform:  <code>object_or_array[propertyName_or_index] = value;</code>)</p>\n<p>You can also note the <strong>klass</strong> utility that is used to create the <strong>Timer</strong> constructor. This utility is used internally by Hashspace to simplify JavaScript Object-Oriented notation and manage prototype-based inheritance.</p>\n\n',sample:b("/samples/timer/timer.hsp.js")},{title:"Event handlers",folder:"clickhandler",files:[{src:"clickhandler.hsp",main:!0,text:'<script>\nvar msg={text:""}, count=-1;\n</script>\n\n<template message(msg)>\n    <div title="click me!" onclick="{changeMessage()}" onselectstart="return false">\n        {if msg.isWarning}<span class="warning">WARNING:&nbsp;</span>{/if}\n        <span>{msg.text}</span>\n    </div>\n</template>\n\n<script>\nfunction changeMessage() {\n    count++;\n    switch(count%3) {\n        case 0:\n            msg.isWarning = false;\n            msg.text = "Click me to discover hashspace event handlers";\n            break;\n        case 1:\n            msg.text = "Well done - you called the event handler and updated the data model in a row!";\n            break;\n        case 2:\n            msg.isWarning = true;\n            msg.text = "If you click again you will be back to first step!";\n            break;\n    }\n}\n\n//export data to be available in test\nmodule.exports.msg = msg;\n\n// set a first message value\nchangeMessage();\n\n// Needed by the playground application.\n// Update it, but do not remove it!\nmodule.exports = {\n    template: message,\n    data: [msg]\n};\n</script>\n'}],description:"<p>This example shows how DOM events can be simply handled in Hashspace: for this you have to use a function expression that refers to a function that can be reached in the template scope:</p>\n[#output]\n<p>In this example the event handler function - <em>changeMessage</em> - will change the message object used by the template instance, and of course the data-binding engine will automatically update the DOM once all JavaScript instructions are executed.</p>\n<p>This example also shows how to insert conditional DOM content through an <em>{if}</em> statement. This conditional statement can be used to insert new nodes or simply text. On contrary to many template engines, Hashspace doesn&#39;t force you to create an HTML container element to include conditional content.</p>\n\n",sample:b("/samples/clickhandler/clickhandler.hsp.js")},{title:"Using conditions: if, else, etc.",folder:"conditions",files:[{src:"conditions.hsp",main:!0,text:'<script>\nvar klass=require("hsp/klass");\n</script>\n\n<!-- nt is an instance of NumberTester -->\n<template test(nt)>\n    <div>\n        Number: <span class="textvalue">{nt.number}</span>\n        {if nt.number==0}\n            (Number equals zero)\n        {else if nt.number>0}\n            (Number is greater than zero)\n        {else}\n            (Number is less than zero)\n        {/if}\n        <br/>\n        Condition using ternary operator: Number is\n        <span class="textvalue">\n            {nt.number>0? "strictly positive" : "negative or null"}\n        </span>\n    </div>\n    <div class="section2">\n        <a href="javascript:void(0)" onclick="{nt.increment(1)}">Increment Number</a> -\n        <a href="javascript:void(0)" onclick="{nt.increment(-1)}">Decrement Number</a>\n    </div>\n</template>\n\n<script>\n// klass is a little utility to create a JS object constructor\n// from a simple JSON structure - main goals are to\n// to simplify prototypal inheritance and ease code reading\nvar NumberTester = klass({\n    $constructor:function() {\n        this.number=0;\n    },\n    increment:function(nbr2) {\n        this.number = this.number+nbr2;\n        return false;\n    }\n});\n\n// Needed by the playground application.\n// Update it, but do not remove it!\nmodule.exports = {\n    template: test,\n    data: function() {\n        return [new NumberTester()];\n    }\n};\n</script>\n'}],description:"<p>This example demonstrates the different possibilities to express conditions in Hashspace:</p>\n<ul>\n<li>either through standard if / else if / else statements</li>\n<li>or also through JavaScript ternary operator</li>\n</ul>\n[#output]\n\n",sample:b("/samples/conditions/conditions.hsp.js")},{category:"Managing lists"},{title:"Simple list and contextual event handlers",folder:"simplelist",files:[{src:"simplelist.hsp",main:!0,text:'<template people(d)>\n    <div class="msg">Click on a person to see more details:</div>\n    <ul class="noTextSelection">\n    {foreach p in d.people}\n        <li class="{{\'details\':p.showdetails, \'special\':p.name===\'Bart\'}}"\n            onclick="{toggleDetails(p)}">\n            {p.name}\n            {if p.showdetails}: {p.age} years old{/if}\n        </li>\n    {/foreach}\n    </ul>\n    <div class="msg">\n        Number of people in the list: {d.people.length}\n    </div>\n</template>\n\n<script>\nfunction toggleDetails(person) {\n    person.showdetails = !person.showdetails;\n}\n\nvar d={\n    people: [\n        {name:"Homer", age:38},\n        {name:"Marge", age:38},\n        {name:"Bart", age:10},\n        {name:"Lisa", age:8},\n        {name:"Maggie", age:1}\n    ]\n}\n\n// Needed by the playground application.\n// Update it, but do not remove it!\nmodule.exports = {\n    template: people,\n    data: [d]\n};\n</script>\n'}],description:"<p>This example shows how to populate a list with a <em>foreach</em> statement and how to implement different displays for each list item. In this particular example this is illustrated with: </p>\n<ul>\n<li>a specific css class for some items - in this case, the <em>special</em> css class is set when the person name is <em>Bart</em>, and the <em>details</em> class is set when the item is clicked.</li>\n<li>different information per item - here the <em>$showdetails</em> boolean property is set when an item is clicked, which activates the age display</li>\n</ul>\n[#output]\n<p>This example also shows that event handlers can get contextual parameters - such as the person argument in the <em>toggleDetails</em> function - which greatly simplifies event handler callbacks. Similarly, it is possible to pass the event object to the event handler by using the <em>event</em> keyword as one of the callback arguments (note that the event can be passed at any argument position). In this example it would look like this:</p>\n<p><code>onclick=&quot;{toggleDetails(p,$event)}&quot;</code>  </p>\n<p>Last but not least, the event handler can stop the default behaviour by returning <em>false</em> - this behaviour is shown in the todo list example.</p>\n\n",sample:b("/samples/simplelist/simplelist.hsp.js")},{title:"Dynamic list update",folder:"listupdate",files:[{src:"list.hsp",main:!0,text:'<template list(persons)>\n    <div> \n        <div class="msg">\n            <a href="javascript:void(0)" onclick="{addElement()}">Add element</a> -\n            <a href="javascript:void(0)" onclick="{deleteElement()}">Delete element</a> -\n            <a href="javascript:void(0)" onclick="{changeAll()}">Change all elements</a>\n        </div>\n        <ol>\n            {foreach p in persons}\n                <li>\n                    {p.firstName} {p.lastName}\n                    {if p_isfirst}<span class="info">(first)</span>{/if}\n                    {if p_islast}<span class="info">(last)</span>{/if}\n                </li>\n            {/foreach}\n        </ol>\n    </div>\n    <div class="msg">\n        Number of people in the list: {persons.length}\n    </div>\n</template>\n\n<script>\nvar persons=[\n    {firstName:"Homer",lastName:"Simpsons"},\n    {firstName:"Marge",lastName:"Simpsons"},\n    {firstName:"Bart"},\n    {firstName:"Lisa"},\n    {firstName:"Maggy"}\n]\n\nvar count=0;\n\nfunction addElement() {\n    count++;\n    // add one element without removing any at position 1\n    persons.splice(1,0,{firstName:"John",lastName:\'Doe\'+count});\n}\n\nfunction deleteElement() {\n    // remove one element at position 0\n    persons.shift(); // same as persons.splice(0,1);\n}\n\nfunction changeAll() {\n    // replace all elements (from 0 to persons.length-1) with the array provided as last argument\n    persons.splice2(0,persons.length,[\n        {firstName:"Charlie", lastName:"Parker"},\n        {firstName:"Sonny", lastName:"Stitt"},\n        {firstName:"Cannonball", lastName:"Adderley"},\n        {firstName:"Stefano", lastName:"Di Battista"},\n        {firstName:"Kenny", lastName:"Garrett"}\n    ]);\n}\n\n\n// Needed by the playground application.\n// Update it, but do not remove it!\nmodule.exports = {\n    template: list,\n    data: [persons]\n};\n</script>\n'}],description:'<p>This example shows how a list implemented with a <em>foreach</em> loop can be dynamically updated: simply click on the links at the top of the example to add, delete or replace some elements.</p>\n[#output]\n<p>As you can see, the list update is automatically managed by the data-binding engine. For this you simply need to update the list array with one of the standard JavaScript methods that mutate arrays:</p>\n<ul>\n<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/splice">splice</a>: to add and remove multiple elements in one single operation</li>\n<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/push">push</a>: to append new elements to the array</li>\n<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/pop">pop</a>: to remove and get the last element of an array</li>\n<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/shift">shift</a>: to remove and get the first element of an array</li>\n<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/unshift">unshift</a>: to insert new elements at the beginning of an array</li>\n<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reverse">reverse</a>: to reverse the array element order</li>\n<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort">sort</a>: to sort array elements according to a sort function</li>\n<li>splice2: which behaves as <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/splice">splice</a> but that takes an array of items as 3rd argument - on the contrary to splice() that requires items to be passed as independent arguments (cf. example). Note: this method is not part of ECMAScript, but is automatically added to the Array prototype by Hashspace.</li>\n</ul>\n<p>Technically those methods have been overridden on the Array object prototype so that the binding engine can detect the changes and automatically trigger template updates. </p>\n\n',sample:b("/samples/listupdate/list.hsp.js")},{title:"List ordering: orderBy and Sorter",folder:"listsorting",files:[{src:"list.hsp",main:!0,text:'<template list(persons)>\n    <div onselectstart="return false">\n        <div class="msg">\n            <span class="info">\n                List sorted with the orderBy() function:\n            </span>\n            <ol>\n                {foreach p in persons|orderBy:"name"}\n                    <li>{p.name}</li>\n                {/foreach}\n            </ol>\n        </div>\n        <hr/>\n        <div class="msg">\n            {let nameSorter=new Sorter({property:"name",states:"ADN"})}\n            <span class="info">\n                List sorted with a Sorter object (current state: {nameSorter.state})\n            </span>\n            <ol>\n                {foreach p in persons|nameSorter}\n                    <li>{p.name}</li>\n                {/foreach}\n            </ol>\n            <a onclick="{nameSorter.nextState()}">Change sort order</a>\n        </div>\n    </div>\n</template>\n\n<script>\nvar people = [\n    {name:"Homer", age:38},\n    {name:"Marge", age:38},\n    {name:"Bart", age:10},\n    {name:"Lisa", age:8},\n    {name:"Maggie", age:1}\n];\n\n// Needed by the playground application.\n// Update it, but do not remove it!\nmodule.exports = {\n    template: list,\n    data: [people]\n};\n</script>\n'}],description:'<p>This example shows how lists can be ordered:</p>\n[#output]\n<p>Hashspace actually proposes two built-in methods to manage sorting:</p>\n<ul>\n<li>for simple cases, sorting can be handled with the <strong>orderBy</strong> method that accepts 2 arguments:<ul>\n<li>first an expression describing the type of sort should be performed. This expression can be either a string that should correspond to an item property name, or a function that will be used to sort. The signature of the sort function should be the same as the <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort">Array.sort()</a> argument.</li>\n<li>second a boolean telling if the sort ordered should be reversed (default: false) </li>\n</ul>\n</li>\n<li>for advanced cases, sorting can be done with a <strong>Sorter</strong> instance that can handle a sort state, and proposes simple methods to dynamically change the sorting state. The Sorter constructor accepts the following <em>options</em> through a configuration object:<ul>\n<li><strong>property</strong>: a property name corresponding to the item property to sort</li>\n<li><strong>sortFunction</strong>: a function to use to sort the collection passed to apply()\nNote: either property or sortfunction must be provided - they will be internally passed as expression \nto the orderBy() function. If both are provided sortFunction is used and property is ignored.</li>\n<li><strong>states</strong>: a string representing the possible sorting states. This string must be composed of the following letters:\n<strong>&quot;A&quot;</strong> for ascending sort, <strong>&quot;D&quot;</strong> for descending sort and <strong>&quot;N&quot;</strong> for no sort (i.e. keep original order). As such using &quot;NAD&quot; (default) means that first sort order will be None, then Ascending, then Descending. Then the sort order can be changed through the nextState() or setState() methods </li>\n</ul>\n</li>\n</ul>\n<p><em>Note 1:</em> orderBy and Sorter are defined in the hashspace global collection and are available in all templates.</p>\n<p><em>Note 2:</em> Sorter exposes an apply() method that is automatically called when used in a pipe expression - this is why it doesn&#39;t need to be explicitely called in the sample template.</p>\n\n',sample:b("/samples/listsorting/list.hsp.js")},{title:"Dynamic data path: simple grid",folder:"dynpath",files:[{src:"dynpath.hsp",main:!0,text:'<template grid(data)>\n    <div>\n        {foreach idx in data.rows}\n            <div>\n                {foreach name in data.columns}\n                    {if name==="c"}\n                        <input class="cell" type="text" model="{data.items[idx][name]}">\n                    {/if}\n                    <div class="cell" title="Ref: {idx}/{name}">\n                        {data.items[idx][name]} &nbsp;\n                    </div>\n                {/foreach}\n            </div>\n        {/foreach}\n    </div>\n    <a href="javascript:void(0)" onclick="{update()}">Update columns B&C</a>\n    &nbsp;-&nbsp;\n    <a href="javascript:void(0)" onclick="{swapC()}">Show/Hide columns C</a>\n</template>\n\n<script>\n// create dummy data\nvar list=[], count=5;\nfor (var i=0;count>i;i++) {\n    list.push({\n        a:"A"+i,\n        b:"B"+i,\n        c:"C"+i,\n        d:"D"+i\n    })\n}\n\nvar model={\n    items:list,\n    rows:[0,1,2,3,4],\n    columns:["a","b","c","d"]\n}\n\nfunction update() {\n    for (var i=0;count>i;i++) {\n        list[i].b+="!";\n        list[i].c+="?";\n    }\n}\n\nfunction swapC() {\n    var col=model.columns;\n    if (col[2]==="c") {\n        col.splice(2,1);\n    } else {\n        col.splice(2,0,"c");\n    }\n}\n\n// Needed by the playground application.\n// Update it, but do not remove it!\nmodule.exports = {\n    template: grid,\n    data: [model]\n};\n</script>\n'}],description:"<p>This example shows how dynamic data path can be used through the <code>[expression]</code> notation:</p>\n[#output]\n<p>As you could expect the &#39;square bracket&#39; JavaScript notation is supported to access some data in a dynamic way. In practice <strong>square brackets can contain any expressions</strong>, including function calls and arithmetic expressions - e.g.:</p>\n<ul>\n<li>{d.person[d.pp]}</li>\n<li>{d.person[d.pp1+d.pp2]}</li>\n<li>{d.person[d[d.prop]].value}</li>\n<li>{d.person[d.pp1][d.pp2]}</li>\n<li>etc.</li>\n</ul>\n<p>As you can see as well <strong>square bracket expressions also support double data-binding</strong> on input fiels - cf. column C</p>\n\n",sample:b("/samples/dynpath/dynpath.hsp.js")},{title:"Simple todo list",folder:"todolist",files:[{src:"todolist.hsp",main:!0,text:'<script>\nvar klass=require("hsp/klass");\n</script>\n\n<template todolist(todo)>\n    <div>\n        <h3>TODO...</h3>\n        <ul>\n        {foreach itm in todo.data.items}\n            <li>{itm}</li>\n        {/foreach}\n        </ul>\n        <form onsubmit="{todo.addItem()}">\n            <input type="text" value="{todo.data.newTodoItem}" />\n            <button>{\'Add #\' + (todo.data.items.length + 1)}</button>\n        </form>\n    </div>\n</template>\n\n<script>\n// todo controller\nvar TodoCtl=klass({\n    $constructor:function() {\n        this.data = {       // todo data model\n            newTodoItem:\'\', // value of the new todo item\n            items:[]        // todo list\n        }\n    },\n    addItem:function() {\n        var d=this.data, items=d.items;\n        // add new item to the todo list\n        items.push(d.newTodoItem);\n        // empty new todo field value\n        d.newTodoItem = "";\n        // return false to prevent default behaviour\n        return false;\n    }\n});\n\n// Needed by the playground application.\n// Update it, but do not remove it!\nvar ctrl = new TodoCtl();\nmodule.exports = {\n    template: todolist,\n    data: [ctrl]\n};\n</script>\n'}],description:'<p>This example is also borrowed from <a href="http://facebook.github.io/react/">react framework</a> documentation and shows a basic todo list implementation:</p>\n[#output]\n<p>Here the argument passed to the template is a small controller object that exposes:</p>\n<ul>\n<li>the todo list data model - composed for this example of a simple list, and of a property to store the todo item that is being created</li>\n<li>the action that can be performed on this data model - in this case the <em>addItem</em> method.</li>\n</ul>\n<p>Using a controller object offers the possibility to support multiple instances of the same template in the same page - of course on condition that the template doesn&#39;t use fixed html ids.</p>\n<p>A more complete implementation of the todo example can be found <a href="/todomvc/">here</a> (should be soon part of the <a href="http://todomvc.com/">todomvc</a> site) - code is available on <a href="https://github.com/ariatemplates/hashspace/tree/master/docs/todomvc">github</a></p>\n<p>The compiled code can be viewed here: <a href="/samples/todolist/todolist.hsp">samples/todolist/todolist.hsp</a></p>\n\n',sample:b("/samples/todolist/todolist.hsp.js")},{category:"Advanced Statements"},{title:"Local variables with {let}",folder:"let",files:[{src:"let.hsp",main:!0,text:'<template test(m)>\n  {let p1=m.part1, m21=m.part2.part21.msg+"!"}\n  <div>\n    {let p11=p1.part11}\n    Part 1.1: <span class="textValue">{p11.msg}</span><br/>\n  </div>\n  <div>\n    Part 2.1: <span class="textValue">{m21}</span> -\n    {if !p11}\n      p11 is of course not visible in the 2nd element scope\n    {/if}\n  </div>\n  <a href="javascript:void(0)" onclick="{updateModel()}">Change Model</a>\n</template>\n\n<script>\nvar model={\n  part1:{\n    part11: {msg: "Message 1.1"}\n  },\n  part2:{\n    part21: {msg: "Message 2.1"}\n  }\n};\n\nvar count=0;\nfunction updateModel() {\n  count++;\n  model.part1.part11.msg = "(1.1 update: "+count+")";\n  model.part2.part21.msg = "(2.1 update: "+count+")";\n}\n\n// Needed by the playground application.\n// Update it, but do not remove it!\nmodule.exports = {\n    template: test,\n    data: [model]\n};\n</script>'}],description:"<p>This example shows how to create local variables through the <strong>{let}</strong> statement</p>\n[#output]\n<p>As you can imagine <code>{let}</code> allows to create one or multiple local variables in the scope of a container block.</p>\n<p>The <code>{let}</code> statements can be used in the following blocks:</p>\n<ul>\n<li>a template block</li>\n<li>an html element (e.g. <em>div</em> in this example)</li>\n<li>an <code>{if}</code>, <code>{else}</code> or <code>{else if}</code> block</li>\n<li>or a <code>{foreach}</code> block</li>\n</ul>\n<p>As the <em>{let}</em> variables are accessible by all the sub-elements of its parent block, <strong>the {let} statements must be defined at the beginning of their containers</strong> - an error will be triggered otherwise.</p>\n\n",sample:b("/samples/let/let.hsp.js")},{title:"Modifiers: piped expressions",folder:"modifiers",files:[{src:"modifiers.hsp",main:!0,text:'<script>\nvar klass=require("hsp/klass");\n\nfunction changeCase(s,arg) {\n    if (arg==="upper") {\n        return (""+s).toUpperCase();\n    } else if (arg==="lower") {\n        return (""+s).toLowerCase();\n    }\n    return s;\n}\n\nvar Sorter=klass({\n    $constructor:function(property) {\n        this.ascending=true;\n        this.pp=property;\n    },\n    apply:function(array) {\n        // copy array\n        var arr=[], pp=this.pp, ascending=this.ascending;\n        for (var i=0,sz=array.length;sz>i;i++) {\n            arr[i]=array[i];\n        }\n        // sort\n        arr.sort(function (a,b) {\n            if (a[pp]>b[pp]) {\n                return ascending? 1 : -1;\n            } else if (a[pp]==b[pp]) {\n                return 0;\n            } else {\n                return ascending? -1 : 1;\n            }\n        });\n        return arr;\n    },\n    toggleOrder:function() {\n        this.ascending=!this.ascending;\n    }\n})\n</script>\n\n<template sample(d)>\n    <div class="section2">\n        Message in capital letters:\n        <span class="textvalue">{d.msg|changeCase:"upper"}</span><br/>\n        Message in lower case:\n        <span class="textvalue">{d.msg|changeCase:"lower"}</span>\n    </div>\n    <div class="section2">\n        {let sortByName=new Sorter("firstName")}\n        Sorted list:\n        <ol>\n            {foreach p in d.persons|sortByName}\n                <li>\n                    {p.firstName} {p.lastName}\n                </li>\n            {/foreach}\n        </ol>\n        <a onclick="{sortByName.toggleOrder()}">\n            Toggle sort order (current: {sortByName.ascending? "ascending" : "descending"})\n        </a>\n    </div>\n</template>\n\n<script>\nvar data={\n    msg:"Hello Simpsons!",\n    persons:[\n        {firstName:"Homer",lastName:"Simpsons"},\n        {firstName:"Marge",lastName:"Simpsons"},\n        {firstName:"Bart"},\n        {firstName:"Lisa"},\n        {firstName:"Maggy"}\n    ]\n};\n\n\n// Needed by the playground application.\n// Update it, but do not remove it!\nmodule.exports = {\n    template: sample,\n    data: [data]\n};\n</script>\n'}],description:"<p>This example shows how modifiers can be used to adapt the value of an expression to the desired display. Modifiers are functions that take as first argument the value of the expression to be adapted and that return the new value. They can also take other arguments that should be separated with colons - e.g. <code>{some.expression|modifier1:arg2:arg3|modifier2}</code></p>\n[#output]\n<p>Hashspace actually supports two types of modifiers:</p>\n<ul>\n<li>either <strong>simple functions</strong> that take the value to be modified as first argument and return the new value. Those values could be of any JavaScript type, e.g. Strings or Arrays <em>- cf. changeCase function in the code sample</em></li>\n<li>or <strong>JavaScript objects</strong> that expose transformation functions. As objects can hold state, this provides a simple way to change and expose internal modifier properties without overloading the main controller with this logic. If the transformation method is called <strong>apply</strong> on such objects, then it can be omitted in the pipe expression to keep the syntax more readable <em>- cf. Sorter example in the code sample</em>.</li>\n</ul>\n<p>Notes:</p>\n<ul>\n<li>Modifiers must always return a copy of the values passed as argument. Otherwise modifiers would modify the reference array and create side effects on other expressions bound to the same data.</li>\n<li>As Hashspace uses the pipe character for modifiers, the JavaScript <strong>bitwise or</strong> operator (that also uses the pipe sign) is not supported in Hashspace expressions.</li>\n</ul>\n\n",sample:b("/samples/modifiers/modifiers.hsp.js")},{title:"Traces, logs and debugging",folder:"logs",files:[{src:"logs.hsp",main:!0,text:'<script>\nvar log=require("hsp/rt/log");\n</script>\n\n<template test(cities, logs)>\n  {log "top-level:",$scope}\n  <a href="javascript:void(0)" onclick="{increaseList()}">Increase list</a> -\n  <a href="javascript:void(0)" onclick="{decreaseList()}">Decrease list</a> -\n  <a href="javascript:void(0)" onclick="{clearLogs()}">Clear logs</a>\n  <ul>\n    {foreach idx,city in cities}\n      {log "item #"+idx+":", city}\n      <li>{idx+1}. {city.name}</li>\n    {/foreach}\n  </ul>\n  <div class="logsection">\n    Logs:\n    <ul class="logs">\n      {foreach msg in logs}\n        <li>\n          <span class="ctxt"> [{msg.file} {msg.line}:{msg.column}] </span>\n          <span class="msg"> {msg.message} </span>\n        </li>\n      {/foreach}\n    </ul>\n  </div>\n</template>\n\n<script>\n// register new logger\nvar logs=[];\nlog.addLogger(function(msg) {\n  logs.push(msg);\n  return false; // to prevent the main logger to be notified\n});\n\nvar cities=[\n    {name:"Paris", code:"PAR"},\n    {name:"London", code:"LON"},\n    {name:"New York", code:"NYC"}\n];\n\nfunction increaseList() {\n  var idx=cities.length+1;\n  cities.push({name:"City "+idx, code:"C"+idx});\n}\n\nfunction decreaseList() {\n  cities.shift(); // remove first item\n}\n\nfunction clearLogs() {\n  logs.splice(0,logs.length);\n}\n\n// Needed by the playground application.\n// Update it, but do not remove it!\nmodule.exports = {\n    template: test,\n    data: [cities, logs]\n};\n</script>\n'}],description:"<p>This example shows how to trace data that are used in a template. It also shows how to retrieve the logs to manage errors at application level, instead of displaying errors in the browser console.</p>\n[#output]\n<p>As you can see logs can be generated from a template through the <strong>{log}</strong> statement. It supports multiple arguments that are automatically concatenated as one string. The first level of object properties and array items are automatically displayed, so that all objects accessible at a template position can be discovered through <strong>{log $scope}</strong></p>\n<p>The <strong>{log}</strong> statement will automatically create a new log when one of the log argument changes.</p>\n<p>On the JavaScript side, Hashspace offers a specific <strong>log</strong> library - cf. <em>require(&quot;hsp/rt/log&quot;)</em>. This library offers simple logging features that allows to log messages to the same place as the <strong>{log}</strong> statement. The log data can then be retrieved by registering a logger function through <strong>log.addLogger()</strong>. This function will receive structured log messages that can be handled at application level. The main methods of the <strong>log</strong> library are the following:</p>\n<ul>\n<li><em>log(obj1 [, obj2, ..., objN, metaData])</em> : to log debug data</li>\n<li><em>log.info(obj1 [, obj2, ..., objN, metaData])</em> : to log informative data</li>\n<li><em>log.warning(obj1 [, obj2, ..., objN, metaData])</em> : to log warning information</li>\n<li><em>log.error(obj1 [, obj2, ..., objN, metaData])</em> : to log errors</li>\n</ul>\n<p>All these methods accept an optional &#39;last&#39; argument used to pass contextual information. This argument is a JSON structure that must have a valid <strong>type</strong> attribute (that is either &quot;info&quot;, &quot;error&quot;, &quot;warning&quot; or &quot;debug&quot;). The following other properties could be added as well:</p>\n<ul>\n<li><em>id</em>: {String|Number} Unique message identifier</li>\n<li><em>message</em>: {String} The default message - in English (will be automatically set from the msg argument)</li>\n<li><em>file</em>: {String} File name associated to the message </li>\n<li><em>dir</em>: {String} Directory path corresponding to the file</li>\n<li><em>code</em>: {String} Some piece of code associated to the message</li>\n<li><em>line</em>: {Number} Line number associated to the message (e.g. for errors)</li>\n<li><em>column</em>: {Number} Column number associated to the message (e.g. for errors) </li>\n</ul>\n\n",sample:b("/samples/logs/logs.hsp.js")},{title:"CSS Class expressions",folder:"cssclass",files:[{src:"cssclass.hsp",main:!0,text:'<template message(msg)>\n    // onselectstart: prevent double-click selection on a elements\n    <div onselectstart="return false">\n        <a href="javascript:void(0)" onclick="{toggleUrgency()}">Change Urgency</a> -\n        <a href="javascript:void(0)" onclick="{setCategory(\'personal\')}">Set "Personal"</a> -\n        <a href="javascript:void(0)" onclick="{setCategory(\'professional\')}">Set "Professional"</a>\n        <div class="msg {msg.category} {{\'urgent\':msg.urgency}}">\n            Message: {msg.text}\n        </div>\n        <div class="note">\n            Class value: "msg {msg.category} {msg.urgency ? \'urgent\' : \'\'}"\n        </div>\n    </div>\n</template>\n\n<script>\nvar msg={\n    text:"Hello World",\n    urgency:false\n}\n\nfunction toggleUrgency() {\n    msg.urgency = !msg.urgency;\n}\n\nfunction setCategory(cat) {\n    msg.category = cat;\n}\n\n// Needed by the playground application.\n// Update it, but do not remove it!\nmodule.exports = {\n    template: message,\n    data: [msg]\n};\n</script>'}],description:"<p>This sample shows a special type of expression that is particularly convenient for class attributes:</p>\n[#output]\n<p>As you can see in the example, you can combine static values and expressions inside the &quot;class&quot; attribute.\nIf an expression is used it can evaluate to either:</p>\n<ul>\n<li>a string - e.g. <em>msg.category</em> - in this case it will be interpreted as class names to add</li>\n<li>an object - e.g. <em>{&#39;urgent&#39; : msg.urgency===1}</em><ul>\n<li>each key in an object is interpreted as a class name that should be inserted (e.g. <em>&#39;urgent&#39;</em>)</li>\n<li>whereas the expression in the value part should resolve to a boolean to tell if the class element should be\ninserted or not (e.g. <em>msg.urgency===1</em>)</li>\n</ul>\n</li>\n</ul>\n<p>You can use more complex expression - e.g. <em>&#39;type&#39;+msg.urgency</em> to build a more dynamic class element.</p>\n\n",sample:b("/samples/cssclass/cssclass.hsp.js")},{title:"Setting global references: the global object",folder:"global",files:[{src:"global.hsp",main:!0,text:'<script>\nvar hsp=require("hsp/rt");\n</script>\n\n<template item(text,value)>\n    {if value}\n        <div>\n            <div class="label">{text}</div>\n            <div class="value">{value}</div>\n        </div>\n    {/if}\n</template>\n\n<script>\nhsp.global.label=item;\nhsp.global.ln={personDetails:"Person details"};\n</script>\n\n<template test(person)>\n    <div class="global" title="{ln.personDetails}">\n        <#label text="First Name: " value="{person.firstName}"/>\n        <#label text="Last Name: "  value="{person.lastName}"/>\n    </div>\n</template>\n\n<script>\n// Needed by the playground application.\n// Update it, but do not remove it!\nmodule.exports = {\n    template: test,\n    data: [{\n        firstName:"Homer",\n        lastName:"Simpson"\n    }]\n};\n</script>\n'}],description:"<p>This sample shows how templates, components or any JavaScript object can be defined in the <code>global</code> Hashspace scope so that they can be used anywhere without being defined in the local scope.</p>\n[#output]\n<p>In this sample, the <em>item</em> template is defined as <em>label</em> in the global scope - and is used through this reference in the <em>test</em> template. The same thing applies for the <em>ln</em> variable.</p>\n<p>In a general manner, the <code>global</code> scope should be used to reference components, templates or general functions that are expected to be used in many places and that should not be systematically redefined or <em>required</em> in the local file scope.</p>\n<p><strong>Note:</strong> variables defined in the <code>global</code> Hashspace scope are of course considered global. As such <strong>no data-binding</strong> will be performed on their reference.</p>\n\n",sample:b("/samples/global/global.hsp.js")},{title:"Dynamic templates",folder:"dyntemplates",files:[{src:"dyntemplates.hsp",main:!0,text:'<template test(ctxt)>\n  <div><a href="javascript:void(0)" onclick="{swapTemplate()}">Change template</a></div>\n  <#ctxt.view ctxt="{ctxt}"/>\n</template>\n\n<template tplA(ctxt)>\n  <div class="msg">\n    A: {ctxt.msg}\n  </div>\n</template>\n\n<template tplB(ctxt)>\n  <div class="msg">\n    B: {ctxt.msg2}\n  </div>\n</template>\n\n<script>\nvar model={\n    view: tplA,\n    msg: "Hello World",\n    msg2: "Always look on the bright side of life!"\n}\n\nfunction swapTemplate() {\n    var newtpl=(model.view===tplA)? tplB : tplA;\n    model.view = newtpl;\n}\n\n\n// Needed by the playground application.\n// Update it, but do not remove it!\nmodule.exports = {\n    template: test,\n    data: [model]\n};\n</script>'}],description:"<p>This sample shows how a view can be dynamically updated with a non-predefined template:</p>\n[#output]\n<p>As templates can be used as properties of objects, they can be changed dynamically. The template insertion mechanism will automatically detect the reference change and unload the previous template before loading the new one. Template attributes can also be passed and changed dynamically.</p>\n<p><strong>Note:</strong> template can only be changed like this if they are referenced as a property of an object which is present in the template scope (ctxt object in this example)</p>\n\n",sample:b("/samples/dyntemplates/dyntemplates.hsp.js")},{category:"Form elements"},{title:"Input fields with bi-directional bindings",folder:"inputsample",files:[{src:"inputsample.hsp",main:!0,text:'<template inputSample(data)>\n    <div class="info2">All the following inputs are synchronized:</div>\n    <div class="section">\n        Comment #1: <input type="text" value="{data.comment}"/><br/>\n        Comment #2: <input type="text" model="{data.comment}"/><br/>\n        Comment #3: <span class="textValue">{data.comment}</span>\n    </div>\n    <div class="section">\n        <input id="cb1" type="checkbox" value="{data.isChecked}"/>\n        <label for="cb1">Check me!</label> -\n\n        <input id="cb2" type="checkbox" model="{data.isChecked}"/>\n        <label for="cb2">Check me (2)!</label> -\n        Checked: <span class="textValue">{data.isChecked}</span>\n    </div>\n    <div class="section">\n        <input id="rb1" type="radio" model="{data.selection}" value="A"/>\n        <label for="rb1">Select A</label> -\n\n        <input id="rb2" type="radio" model="{data.selection}" value="B"/>\n        <label for="rb2">Select B</label> -\n\n        <input id="rb3" type="radio" model="{data.selection}" value="C"/>\n        <label for="rb3">Select C</label> -\n        Selection in model:<span class="textValue">{data.selection}</span>\n    </div>\n    <div class="section">\n        Input with dynamic type:\n        <input type="{data.dtype}" value="{data.comment}" style="width:100px"/> -\n        change type: <input type="text" value="{data.dtype}" style="width:100px"/>\n    </div>\n</template>\n\n<script>\nvar d={comment:"edit me!", isChecked:false, selection:"B", dtype:"text"}\n\n// Needed by the playground application.\n// Update it, but do not remove it!\nmodule.exports = {\n    template: inputSample,\n    data: [d]\n};\n</script>\n'}],description:"<p>Hashspace automatically listens to the main change events of its input elements (<em>click</em>, <em>focus</em> and <em>keyup</em>) in order to transparently synchronize the input values with the data referenced through the value expression.</p>\n<p>The following example shows the same value referenced by two several text fields and a read-only span:</p>\n[#output]\n<p>You can note that <em>radio</em> inputs have to use a <strong>model</strong> attribute in order to bind their selection to the data-model. All radio buttons referencing the same model property will automatically belong the same group - and they don&#39;t need to have the same <em>name</em> attribute as in classical HTML forms.</p>\n<p>For the sake of consistency the <strong>model</strong> attribute can also be used on all input types, even if the <em>value</em> attribute can be used as well, as shown in the previous example.</p>\n<p><strong>Note:</strong> When users type in an input field, <strong>Hashspace synchronizes the data model on the input event</strong> (except in IE8/9 for which keyup is used). As a consequence, applications that need to validate (and potentially change) user inputs should listen to this <strong>keyup</strong> event, and not to the <em>keydown</em> event as text fields are not updated yet at this stage.</p>\n\n",sample:b("/samples/inputsample/inputsample.hsp.js")},{title:"Select fields and options elements with bi-directional bindings",folder:"selectsample",files:[{src:"selectsample.hsp",main:!0,text:'<template selectSample(data)>\n    <div class="info2">The following select and its options are synchronized:</div>\n    <div class="section">\n        Select with bound value:\n        <select model="{data.selectedValue}" style="width:100px">\n            {foreach item in data.options}\n            <option value="{item.value}">{item.label}</option>\n            {/foreach}\n        </select>\n    </div>\n    <div class="section">\n        The selected value is <span class="info">{data.selectedValue}</span>,\n        the selected text is <span class="info">{getSelectedText(data.selectedValue)}</span>\n    </div>\n    <div class="info2">You can add or remove options, and select one by changing the data model value:</div>\n    <div class="section">\n        <button onclick="{addOption(\'four\', \'Four\')}">Add option \'four\'</button>\n        <button onclick="{selectOption(\'four\')}">Select option \'four\'</button>\n        <button onclick="{removeOption(\'four\')}">Remove option \'four\'</button>\n    </div>\n</template>\n\n<script>\nvar d={\n    selectedValue:"two",\n    options : [\n        {\n            value: "one",\n            label: "One"\n        },\n        {\n            value: "two",\n            label: "Two"\n        },\n        {\n            value: "three",\n            label: "Three"\n        }\n    ]\n};\n\n// Needed by the playground application.\n// Update it, but do not remove it!\nmodule.exports = {\n    template: selectSample,\n    data: [d]\n};\n\nvar getSelectedText = function(value) {\n    var options = d.options;\n    for(var i = 0; i < options.length; i++) {\n        var option = options[i];\n        if (option.value == value) {\n            return option.label;\n        }\n    }\n    return "no selection";\n}\nvar addOption = function(value, label) {\n    var options = d.options;\n    for(var i = 0; i < options.length; i++) {\n        var option = options[i];\n        if (option.value == value) {\n            return;\n        }\n    }\n    options.push({value: value, label: label});\n};\n\nvar selectOption = function(value) {\n    d.selectedValue = value;\n};\n\nvar removeOption = function(value) {\n    var options = d.options;\n    for(var i = 0; i < options.length; i++) {\n        var option = options[i];\n        if (option.value == value) {\n            options.splice(i, 1);\n            return;\n        }\n    }\n};\n</script>'}],description:"<p>Hashspace listens to the change event of the select elements in order to synchronize its value with the data referenced through the value or model expression.\nThe options can also be bound, and changing the options list can impact the select value.</p>\n<p>For example, in the following select, we can add or remove the fourth option.</p>\n<ul>\n<li>If we try to set the data model value to &#39;four&#39; when the option doesn&#39;t exist, the select value and the data model will remain unchanged,</li>\n<li>If we remove the option &#39;four&#39; when this one is selected, the value will be set automatically to the first one.</li>\n</ul>\n[#output]\n<p><strong>Note:</strong></p>\n<ul>\n<li>An invalid value (not existing in its options) can&#39;t be set in the data model.</li>\n<li>The options list can be change completely. In this case, a valid select value will be kept, otherwise, the first one will be selected.</li>\n</ul>\n\n",sample:b("/samples/selectsample/selectsample.hsp.js")},{title:"Multi-line inputs: textarea elements",folder:"textarea",files:[{src:"textarea.hsp",main:!0,text:'<template sample(data)>\n    <div class="info2">The following textarea elements are synchronized:</div>\n    <div class="section">\n        <div>Text #1:</div>\n        <textarea rows="4" cols="40" model="{data.text}"/>\n    </div>\n    <div class="section">\n        <div>Text #2:</div>\n        <textarea rows="4" cols="40"  model="{data.text}"/>\n    </div>\n    <a href="javascript:void(0)" onclick="{changeText(data)}">Change text</a>\n</template>\n\n<script>\nvar d={\n    // Frog by Donna Shepherd\n    text:"    @..@\\n   (----)\\n  ( >__< )\\n ^^ ~~ ^^"\n}\n\nvar count=1;\nfunction changeText(d) {\n    count++, msg=[];\n    for (var i=0;count>i;i++) {\n        msg.push("This text contains "+count+" lines")\n    }\n    d.text=msg.join("\\n");\n}\n\n// Needed by the playground application.\n// Update it, but do not remove it!\nmodule.exports = {\n    template: sample,\n    data: [d]\n};\n</script>\n'}],description:"<p>This sample shows how textarea elements can be used in Hashspace.</p>\n[#output]\n<p>Like for input elements, Hashspace uses the <code>model</code> attribute to bind the textarea content with the template&#39;s model.</p>\n\n",sample:b("/samples/textarea/textarea.hsp.js")},{title:"Input fields: onupdate event",folder:"inputonupdate",files:[{src:"inputonupdate.hsp",main:!0,text:'<template inputOnupdate(data)>\n    <div class="info2">Input field with a standard timer of 500ms:</div>\n    <div class="section">\n        <input type="text" model="{data.comment}" onupdate="{data.updateHandler($event)}"/><br/>\n        <span>Oninput result: {data.delayed}</span>\n    </div>\n    <div class="info2">Input field with a longer timer of 2000ms:</div>\n    <div class="section">\n        <input type="text" model="{data.comment2}" onupdate="{data.updateHandler2($event)}" update-timeout="2000"/><br/>\n        <span>Oninput result: {data.delayed2}</span>\n    </div>\n    <div class="info2">Textarea with a standard timer of 500ms:</div>\n    <div class="section">\n        <textarea rows="4" cols="40" model="{data.comment3}" onupdate="{data.updateHandler3($event)}"/><br/>\n        <span>Oninput result: {data.delayed3}</span>\n    </div>\n</template>\n\n<script>\nvar d={comment:"Edit me and wait!", delayed:"",\nupdateHandler: function(event) {\n    this.delayed = event.target.value;\n},\ncomment2:"Edit me and wait more!", delayed2:"",\nupdateHandler2: function(event) {\n    this.delayed2 = event.target.value;\n},\ncomment3:"Edit me and wait!", delayed3:"",\nupdateHandler3: function(event) {\n    this.delayed3 = event.target.value;\n}};\n\n// Needed by the playground application.\n// Update it, but do not remove it!\nmodule.exports = {\n    template: inputOnupdate,\n    data: [d]\n};\n</script>\n'}],description:"<p>Hashspace manages a custom event handler on input and textarea elements: <strong>onupdate</strong>. It is fired after a certain duration after the content of the field has been changed, and the timer is restarted each time the content is changed.<br>By default, the timer duration is 500ms. It can be changed by defining a <strong>update-timeout</strong> attribute.</p>\n<p>The following examples show the custom event handler in action:</p>\n[#output]\n\n",sample:b("/samples/inputonupdate/inputonupdate.hsp.js")},{category:"Components"},{title:"Basic components: sub-templates",folder:"subtemplates",files:[{src:"subtemplates.hsp",main:!0,text:'\n<export template personList(persons)>\n    <div class="subtemplates">\n        {foreach p in persons}\n            <#personDescription person="{p}"/>\n            // add a separator between each person\n            {if !p_islast} <hr/> {/if}\n        {/foreach}\n    </div>\n</template>\n\n<export template personDescription(person)>\n    <div class="person">\n        <#item label="First Name: " value="{person.firstName}"/>\n        <#item label="Last Name: " value="{person.lastName}"/>\n    </div>\n</template>\n\n<template item(label,value)>\n    {if value}\n        <div>\n            <div class="label">{label}</div>\n            <div class="value">{value}</div>\n        </div>\n    {/if}\n</template>\n\n<script>\nvar persons=[\n    {firstName:"Homer",lastName:"Simpsons"},\n    {firstName:"Marge",lastName:"Simpsons"},\n    {firstName:"Bart"},\n    {firstName:"Lisa"},\n    {firstName:"Maggy"}\n]\n\n\n// Needed by the playground application.\n// Update it, but do not remove it!\nmodule.exports = {\n    template: personList,\n    data: [persons]\n};\n</script>\n'}],description:'<p>This sample shows how to split a template in smaller templates that can be used and shared independently.</p>\n[#output]\n<p>You can note the <strong>export</strong> keyword that automatically publishes the template on the <em>module.exports</em> interface (cf. <a href="http://wiki.commonjs.org/wiki/Modules/1.1">Common JS modules</a>). This way one can easily build libraries of templates that can be used from any JavaScript modules.</p>\n\n',sample:b("/samples/subtemplates/subtemplates.hsp.js")},{title:"Simple component: Timer",folder:"component1",files:[{src:"timer.hsp",main:!0,text:'<script>\nvar klass=require("hsp/klass");\n\n// klass is a utility to create JS objects with constructors & prototypes\nvar Timer=klass({\n    $attributes: {\n      initvalue:{type:"int",defaultValue:0,binding:"none"}\n    },\n    $init:function() {\n      this.secondsElapsed=this.initvalue;\n      this._iid=setInterval(this.tick.bind(this),1000);\n    },\n    $dispose:function() {\n      clearInterval(this._iid);\n    },\n    tick:function() {\n      this.secondsElapsed++;\n    }\n});\n</script>\n\n<template timer using t:Timer>\n    Elapsed time: {t.secondsElapsed}s\n</template>\n\n<template test>\n  Sample showing two timer instances with different init values:<br/>\n  <#timer/> <br/>\n  <#timer initvalue="10"/>\n</template>\n\n<script>\n// Needed by the playground application.\n// Update it, but do not remove it!\nmodule.exports = {\n    template: test\n};\n</script>\n'}],description:"<p>This example shows how custom components can be developed with Hashspace. Unlike classic templates, component templates define their own controller that can expose attributes that will be automatically bound to the component attributes used in the caller template. </p>\n<p>In this example, we create a simple timer component that counts elapsed seconds. It supports a single optional attribute to set the init timer value.</p>\n[#output]\n<p>The differences with the non-componentized timer sample are that:</p>\n<ul>\n<li>the <em>timer</em> template doesn&#39;t use function arguments, but declares its controller through the <strong>using [name]:[controller]</strong> syntax</li>\n<li>the controller instance (in this case <em>Timer</em>) is automatically created when the component is used - this is why the two <em>timer</em> instances show different values</li>\n<li><strong>the controller <em>init</em> function is automatically called once all attributes have been created and initialized</strong> with the values provided by the component host. The <em>init</em> method allows then to create and initialize internal properties that will be exposed to the template only. It is important to note that attributes will be automatically created and don&#39;t need to be created in the controller&#39;s constructor (empty in this example).</li>\n<li>the controller public attributes (here <em>initvalue</em>) have to be declared through the <strong>$attributes</strong> collection attached to the controller prototype</li>\n<li>when an attribute is set by an external object (e.g. the host or the component template), the <strong>$on[AttributeName]Change</strong> method is called if the attribute binding is declared as <em>1-way</em> or <em>2-way</em>. This allows synchronization of internal properties bound to public attributes - but we don&#39;t need this possibility in this example.</li>\n</ul>\n\n",sample:b("/samples/component1/timer.hsp.js")},{title:"SVG component: Clock",folder:"clock",files:[{src:"clock.hsp",main:!0,text:'<script>\nvar klass=require("hsp/klass");\n\nvar CITIES={\n	"SFO":{city:"San Francisco",offset:-8},\n	"PAR":{city:"Paris",offset:+1},\n	"TYO":{city:"Tokyo",offset:+9}\n}\n\nvar ClockController=klass({\n	$attributes:{\n		"city":{type:"string",binding:"1-way",defaultValue:"PAR"}\n	},\n	$init:function() {\n		this.minuteMarkers=[]; // list of minute markers\n		for (var i=0;60>i;i++) {\n			this.minuteMarkers[i]={major:(i%5===0)};\n		}\n		this.$onCityChange();\n		this._iid=setInterval(this.tick.bind(this),100);\n	},\n	$dispose:function() {\n		clearInterval(this._iid);\n	},\n	$onCityChange:function() {\n		// dynamic city change: check city validity and refresh the display\n		if (!CITIES[this.city]) {\n			// unsupported city\n			this.city="PAR"; // default\n		}\n		this.tick();\n	},\n	tick:function() {\n		var d=new Date();\n		var to=CITIES[this.city].offset;\n		var o=d.getTimezoneOffset()/60;\n		d=new Date(d.getTime()+ ((o+to)*3600000)); // date in the target city\n		this.hours = d.getHours();\n		this.minutes = d.getMinutes();\n		this.seconds = d.getSeconds();\n		this.milliseconds = d.getMilliseconds();\n		this.cityName = CITIES[this.city].city;\n	}\n});\n</script>\n\n<template clock using c:ClockController>\n	// example from http://www.ractivejs.org/examples/clock/\n	<div class="square">\n		<svg viewBox="0 0 100 100">\n		  <g transform="translate(50,50)">\n		    <circle class="clock-face" r="48"/>\n		    // minute markers\n        	{foreach idx,m in c.minuteMarkers}\n        		// {foreach i in [1..60]} should be supported in a future version\n          		<line class="{{\'major\':m.major,\'minor\':!m.major}}" y1="{m.major?35:42}"\n          		y2="45" transform="rotate({360*idx/c.minuteMarkers.length})"/>\n        	{/foreach}\n		    // hour hand\n	        <line class="hour" y1="2" y2="-20" transform="rotate({30*c.hours+c.minutes/2})"/>\n	        // minute hand\n        	<line class="minute" y1="4" y2="-30" transform="rotate({6*c.minutes+c.seconds/10})"/>\n        	// second hand\n        	<g transform="rotate({6*(c.seconds+c.milliseconds*0.001)})">\n	          <line class="second" y1="10" y2="-38"/>\n	          <line class="second-counterweight" y1="10" y2="2"/>\n	        </g>\n		  </g>\n		</svg>\n		<div class="city">{c.cityName}</div>\n	</div>\n</template>\n\n<template demo>\n	<#clock city="SFO"/>\n	<#clock city="PAR"/>\n	<#clock city="TYO"/>\n</template>\n\n<script>\n// Needed by the playground application.\n// Update it, but do not remove it!\nmodule.exports = {\n    template: demo\n};\n</script>\n'}],description:'<p>This example originally demonstrated in the <a href="http://www.ractivejs.org/examples/clock/">ractive framework</a> documentation shows how SVG elements can be easily integrated in components or templates</p>\n[#output]\n\n',sample:b("/samples/clock/clock.hsp.js")},{title:"Binding attributes: Number field",folder:"component2",files:[{src:"nbrfield.hsp",main:!0,text:'<script>\nvar klass=require("hsp/klass");\n\n// Component controller\nvar NbrField = klass({\n  $attributes:{\n    "value":{type:"float",defaultValue:0,binding:"2-way"},\n    "defaultvalue":{type:"float",defaultValue:0},\n    "min":{type:"float",defaultValue:-Number.MAX_VALUE,binding:"1-way"},\n    "max":{type:"float",defaultValue:Number.MAX_VALUE,binding:"1-way"},\n    "onreset":{type:"callback"}\n  },\n  /**\n   * init method called when all attributes have been initialized\n   */\n  $init:function() {\n    // set and init internal properties\n    this.internalValue=\'\'+this.value; // type:string but bound to value\n    this.isValid=true;                // bound to internalValue, min and max\n    this.checkValidity();\n  },\n  /**\n   * attribute change handlers - notify the controller that an external object\n   * (template or host) updated the value attribute\n   */\n  $onValueChange:function(newValue,oldValue) {\n    var n=getNumber(newValue);\n    this.internalValue = n!==null? n : 0;\n    this.checkValidity();\n  },\n  $onMinChange:function(newValue,oldValue) {\n    this.checkValidity();\n  },\n  $onMaxChange:function(newValue,oldValue) {\n    this.checkValidity();\n  },\n  /**\n   * property change handler - notify the controller that the template\n   * changed an internal property\n   */\n  $onInternalValueChange:function(newValue,oldValue) {\n    // validate and expose as attribute if ok\n    this.value = this.checkValidity()? parseInt(this.internalValue,10) : this.defaultvalue;\n  },\n  /**\n   * Check if the internal value is valid and update the isValid property accordingly\n   */\n  checkValidity:function() {\n    var n=getNumber(this.internalValue);\n    var v=(n===null)? false : (n>=this.min) && (n<=this.max);\n    return this.isValid = v;\n  },\n  /**\n   * Reset the field value\n   */\n  resetField:function() {\n    var v1=this.value, v2=this.defaultvalue;\n    this.internalValue = v2;\n    this.value = v2;\n    this.checkValidity();\n    this.onreset({oldValue:v1,newValue:v2}); // call back event listener\n  }\n})\n\n// transform a string to a number\nvar NBR_DIGITS=/^(\\-|\\.|\\+)?\\d+(\\.)?(\\d+)?$/;\nfunction getNumber(s) {\n    s=""+s;\n    if (!NBR_DIGITS.test(s)) return null;\n    return Number(s);\n}\n</script>\n\n<!-- component template associated with the NbrField controller -->\n<export template nbrfield using c:NbrField>\n  <span class="nbrfield">\n    <input type="text" model="{c.internalValue}"\n    class="nbrfield {{\'error\': !c.isValid}}"/>\n    <button onclick="{c.resetField()}">reset</button>\n  </span>\n</template>\n\n<!-- component usage -->\n<template test(d)>\n  Component #1: <#nbrfield value="{d.value1}" min="-10" max="1000"/><br/>\n  Value in the data model: <span class="textValue">{d.value1}</span>\n  (min:-10 / max:1000 / default:0)\n  <hr/>\n  Component #2: <#nbrfield value="{d.value2}"/><br/>\n  Value in the data model: <span class="textValue">{d.value2}</span>\n</template>\n\n<script>\n// Needed by the playground application.\n// Update it, but do not remove it!\nmodule.exports = {\n    template: test,\n    data: [{ value1 : 123 }]\n};\n</script>\n'}],description:"<p>This example shows a simple component that allows entering a numeric value. The value entered by the user will be considered as valid if it can be interpreted as a number, and if it is included within the <em>min</em> and <em>max</em> boundaries. When the value is incorrect, the field background is set to orange. The component also shows a button next to the field in order to let the user reset the value to a predetermined value.</p>\n[#output]\n<p>This component exposes 4 public attributes and 2 internal values (<em>internalValue</em> and <em>isValid</em>) to the component template. Of course, only the attributes are accessible to the component&#39;s host template. The main point of this example is to show how internal properties can be synchronized with public attributes - for instance:</p>\n<ul>\n<li>when the <em>internalValue</em> changes, its value should be propagated to the value attribute only if it is considered valid</li>\n<li>the <em>value</em> attribute should be propagated to the field only if valid</li>\n<li>the <em>isValid</em> property has to change depending on the <em>internalValue</em> and on the attribute values, etc.</li>\n</ul>\n<p>To manage these internal constraints the controller can implement $onXxxChange() methods that will be automatically called when properties or bound attributes are updated</p>\n<p>It is important to note that <strong>change handlers are not called when changes are performed by the controller itself</strong> - i.e. <strong>if a controller property is changed in a change handler, the change handler of the corresponding property will not be called</strong>. This allows avoiding infinite loops and strange side effects.</p>\n\n",sample:b("/samples/component2/nbrfield.hsp.js")},{title:"Component triggering events: Pagination",folder:"component3",files:[{src:"pagination.hsp",main:!0,text:'<script>\nvar klass=require("hsp/klass");\n\nfunction calculateNoOfPages(collectionSize, pageSize) {\n    return Math.ceil(collectionSize / pageSize);\n}\n\nfunction rebuildPagesModel(noOfPages) {\n    var pages = [];\n    for (var i=0; i<noOfPages; i++) {\n        pages.push(i);\n    }\n    return pages;\n}\n\nfunction rebuildInternalModel(ctl) {\n   ctl.noOfPages = calculateNoOfPages(ctl.collectionsize, ctl.pagesize);\n   ctl.pages = rebuildPagesModel(ctl.noOfPages);\n   ctl.selectPage(ctl.activepage);\n}\n\nvar Pagination=klass({\n    $attributes: {\n      "collectionsize":{type:"int", defaultValue:0, binding:"1-way"},\n      "pagesize":{type:"int", defaultValue:10, binding:"1-way"},\n      "activepage":{type:"int", defaultValue:0, binding:"2-way"},\n      "onpageselect":{type:"callback"}\n    },\n    $init:function() {\n       rebuildInternalModel(this);\n    },\n    selectPage: function(newPageNo) {\n        newPageNo = Math.min(Math.max(0, newPageNo), this.noOfPages-1);\n        if (this.activepage!==newPageNo) {\n          this.activepage = newPageNo;\n          this.onpageselect({pageNumber:this.activepage});\n        }\n    },\n    $onCollectionsizeChange: function() {\n        rebuildInternalModel(this);\n    },\n    $onPagesizeChange: function() {\n       rebuildInternalModel(this);\n    }\n});\n</script>\n\n<template pagination using p:Pagination>\n    <ul class="pagination">\n        <li class="{{\'disabled\':p.activepage===0}}">\n            <a href="javascript:void(0)" onclick="{p.selectPage(p.activepage-1)}">Previous</a>\n        </li>\n        {foreach page in p.pages}\n            <li class="{{\'active\':page==p.activepage}}">\n                <a href="javascript:void(0)" onclick="{p.selectPage(page)}">{page + 1}</a>\n            </li>\n        {/foreach}\n        <li class="{{\'disabled\':p.activepage>=p.noOfPages-1}}">\n            <a href="javascript:void(0)" onclick="{p.selectPage(p.activepage+1)}">Next</a>\n        </li>\n    </ul>\n</template>\n\n<template paginationTest(model)>\n  <div class="section3">\n    <label class="fieldlabel">Active page: </label><input type="number"  model="{model.active}"/><br/>\n    <label class="fieldlabel">Collection size: </label><input type="number"  model="{model.collectionSize}"/><br/>\n    <label class="fieldlabel">Page size: </label><input type="number"  model="{model.pageSize}"/><br/>\n    Last page selection  <i> - from event</i>: <span class="textValue">{model.lastSelectedPage}</span>\n  </div>\n  <#pagination activepage="{model.active}" collectionsize="{model.collectionSize}"\n    pagesize="{model.pageSize}" onpageselect="{updateSelection($event.pageNumber)}"/>\n\n</template>\n\n<script>\nvar model = {\n    active: 4,\n    collectionSize: 99,\n    pageSize: 10,\n    lastSelectedPage: "(...)"\n}\n\nfunction updateSelection(newPageNumber) {\n  model.lastSelectedPage = newPageNumber;\n}\n\n// Needed by the playground application.\n// Update it, but do not remove it!\nmodule.exports = {\n    template: paginationTest,\n    data: [model]\n};\n</script>\n'}],description:'<p>This example shows how to develop a simple pagination component based on <a href="http://getbootstrap.com/">bootstrap</a> CSS framework</p>\n[#output]\n<p>As you can see, supporting custom events in a component simply requires two lines of code:</p>\n<ul>\n<li>in the component <em>$attributes</em> section, the developer needs to declare the callback attribute - such as <em>onpageselect</em> in this example. Note that the event name should be lower case to follow the HTML conventions.</li>\n<li>in the method where the event needs to be raised, you simply need to call the event callback and pass the event object properties as argument - c.f. <em>this.onpageselect({pageNumber:this.activepage})</em> in this example</li>\n</ul>\n\n',sample:b("/samples/component3/pagination.hsp.js")},{title:"Component with template properties: Panel",folder:"panel",files:[{src:"panel.hsp",main:!0,text:'<script>\nvar klass=require("hsp/klass");\n\nvar PanelController = klass({\n  $attributes: {\n    "head":{type:"template"},\n    "body":{type:"template",defaultContent:true}\n  }\n});\n</script>\n\n<!-- sample panel template -->\n<template panel using c:PanelController>\n  <div class="panel">\n    {if c.head}\n      <div class="head"> <#c.head/> </div>\n    {/if}\n    <div class="body">\n      <#c.body/>\n    </div>\n  </div>\n</template>\n\n<template test(m)>\n  <#panel body="Panel A (headless): {m.text}"/>\n\n  <#panel head="Panel B ({m.text}!)">\n    {m.text}! <a href="javascript:void(0)" onclick="{update(1)}">Update model</a>\n  </#panel>\n\n  <#panel>\n    <@head>Panel C: <a href="javascript:void(0)" onclick="{update(10)}">Update model</a></@head>\n    <@body>{m.text}! <a href="javascript:void(0)" onclick="{update(100)}">Update model</a></@body>\n  </#panel>\n</template>\n\n<script>\nvar model={text:"Hello World"}, count=0;\n\nfunction update(incr) {\n  count+=incr;\n  model.text = "Hello World ("+count+")";\n}\n\n// Needed by the playground application.\n// Update it, but do not remove it!\nmodule.exports = {\n    template: test,\n    data: [model]\n};\n</script>\n'}],description:"<p>This example demonstrates how a component can define and use <em>template</em> attributes - that is attribute that can contain HTML, template control statements or sub-components.</p>\n[#output]\n<p>To support <em>template</em> attribute(s) the template controller simply needs to declare an attribute with the type <strong>template</strong>. If there is only one attribute of this type, then the component content will be automatically associated to this attribute (e.g. <em>body</em> in the second panel). However, if there are multiple <em>template</em> attributes, the default attribute must be identified with the <strong>defaultContent</strong> flag.</p>\n<p>In this example you can also see that template attributes can be used in different manners:</p>\n<ul>\n<li>as standard text attributes if HTML content is not required (cf. 1st panel of the <em>test</em> template)</li>\n<li>as default content (2nd panel)</li>\n<li>or as explicit sub-attribute nodes (cf. <strong>&lt;@head&gt;</strong> and <strong>&lt;@body&gt;</strong> in the 3rd panel)</li>\n</ul>\n\n",sample:b("/samples/panel/panel.hsp.js")},{title:"Component with sub-elements: List #1",folder:"list1",files:[{src:"list.hsp",main:!0,text:'<script>\nvar klass=require("hsp/klass");\n\n// simple list controller\nvar ListController = klass({\n  $attributes: {\n    "class":{type:"string",binding:"1-way"},\n    "onclick":{type:"callback"},\n    "head":{type:"template"}\n  },\n  $elements: {\n    "option": {type:"template"},\n    "separator": {type:"template"}\n  }\n});\n</script>\n\n<!-- simple list template -->\n<template list using lc:ListController>\n  // content is the list of attribute sub-elements\n  <div class="list {lc.class}">\n    {if lc.head}\n      <div class="head"><#lc.head/></div>\n    {/if}\n    {if !lc.$content}\n        <span class="nodata">Empty list</span>\n    {else}\n        <ul class="noTextSelection">\n            {foreach idx,itm in lc.$content}\n                {if itm.tagName==="@option"}\n                    <li class="opt"><#itm/></li>\n                {else if itm.tagName==="@separator" &&  !itm_isfirst && !itm_islast}\n                    <hr/>\n                {/if}\n            {/foreach}\n        </ul>\n    {/if}\n  </div>\n</template>\n\n<!-- test template -->\n<template test(d)>\n  <#list head="Static list" class="listcpt">\n    <@option>First {d.itemName}</@option>\n    <@option>Second {d.itemName}</@option>\n  </#list>\n\n  <#list class="listcpt">\n    <@head>\n      Dynamic list:\n      <a href="javascript:void(0)" onclick="{toggle()}">Toggle favourite</a> -\n      <a href="javascript:void(0)" onclick="{empty()}">Empty</a> -\n      <a href="javascript:void(0)" onclick="{update()}">Update list</a>\n    </@head>\n    {if d.preferredOption}\n      <@option>{d.preferredOption} (!)</@option>\n      <@separator/>\n    {/if}\n    {foreach idx,itm in d.items}\n      <@option>{idx+1}. {itm}</@option>\n    {/foreach}\n  </#list>\n</template>\n\n<script>\nvar count=0, model={\n  itemName: "item",\n  preferredOption:"My favourite things",\n  items:["Kind of blue","Something else","Winter moon"]\n};\n\nfunction toggle() {\n  model.preferredOption = model.preferredOption? null : "My favourite things";\n}\n\nfunction empty() {\n  model.items.splice(0,model.items.length);\n}\n\nfunction update() {\n  count++;\n  for (var i=0;count>i;i++) {\n    model.items[i] = "Item #"+(i+1)+" (change "+count+")";\n  }\n}\n\n// Needed by the playground application.\n// Update it, but do not remove it!\nmodule.exports = {\n    template: test,\n    data: [model]\n};\n</script>\n'}],description:"<p>This example demonstrates how a component can define and use its own sub-elements to support more complex use cases such as lists.</p>\n[#output]\n<p>As you can see from the sample code, supporting sub-elements requires few basic steps:</p>\n<ul>\n<li>first, the sub-elements have to be declared through a <strong>$elements</strong> collection on the component&#39;s prototype.</li>\n<li>then, the component&#39;s template simply needs to scan the <strong>$content</strong> collection that is automatically created on the controller instance to reference the element entities used in the component&#39;s parent template.</li>\n</ul>\n<p>The <em>$content</em> collection is an ordered list that can be dynamically modified through <em>{if}</em> or <em>{foreach}</em> control statements. When template attributes are used in combination with sub-elements, the <em>$content</em> collection will not reference them, as the template attributes will be directly referenced and as such don&#39;t need to be integrated in the element&#39;s content collection (cf. <em>@head</em> attribute in the example).</p>\n\n",sample:b("/samples/list1/list.hsp.js")},{title:"Component with sub-elements: List #2",folder:"list2",files:[{src:"list.hsp",main:!0,text:'<script>\nvar klass=require("hsp/klass");\n\n// simple option controller\nvar OptionCtrl = klass({\n  $attributes: {\n    "value":{type:"string",binding:"1-way"},\n    "label":{type:"template"}\n  },\n  $init: function(parent) {\n    // parent is the parent controller\n    this.selected=false;\n  }\n});\n\n// simple list controller\nvar ListCtrl = klass({\n  $attributes: {\n    "class":{type:"string",binding:"1-way"},\n    "onselect":{type:"callback"},\n    "head":{type:"template"}\n  },\n  $elements: {\n    "option": {type:"component",controller:OptionCtrl},\n    "separator": {type:"template"}\n  },\n  select:function (value) {\n    // select\n    var c=this.$content;\n    for (var i=0,sz=c.length;sz>i;i++) {\n      if (c[i].tagName==="@option") {\n        c[i].selected = c[i].value===value;\n      }\n    }\n    this.onselect({value:value});\n  }\n});\n</script>\n\n<script>\n// simple list template\n</script>\n<template list using lc:ListCtrl>\n  // content is the list of attribute sub-elements\n  <div class="list {lc.class}">\n    {if lc.head}\n      <div class="head"><#lc.head/></div>\n    {/if}\n    {if !lc.$content}\n      <span class="nodata">Empty list</span>\n    {else}\n      <ul class="noTextSelection">\n        {foreach idx,itm in lc.$content}\n          {if itm.tagName==="@option"}\n            <li class="opt" onclick="{lc.select(itm.value)}">\n              <span class="item {{\'highlight\':itm.selected}}"><#itm.label/></span>\n            </li>\n          {else if itm.tagName==="@separator" &&  !itm_isfirst && !itm_islast}\n            <hr/>\n          {/if}\n        {/foreach}\n      </ul>\n    {/if}\n  </div>\n</template>\n\n<!-- test template -->\n<template test(d)>\n  Click on an item to select it:\n\n  <#list head="Static list" class="listcpt" onselect="{showSelection($event.value)}">\n    <@option value="A" label="First {d.itemName}"/>\n    <@option value="B">Second {d.itemName}</@option>\n  </#list>\n\n  <#list class="listcpt" onselect="{showSelection($event.value)}">\n    <@head>\n      Dynamic list:\n      <a href="javascript:void(0)" onclick="{empty()}">Empty</a> -\n      <a href="javascript:void(0)" onclick="{update()}">Update list</a>\n    </@head>\n    {foreach idx,itm in d.items}\n      <@option value="K{idx}">{idx+1}. {itm}</@option>\n    {/foreach}\n  </#list>\n\n  {if d.selectedItem!==null}Last selected value: {d.selectedItem}{/if}\n</template>\n\n<script>\nvar count=0, model={\n  itemName: "item",\n  items:["Kind of blue","Something else","Winter moon"]\n};\n\nfunction empty() {\n  model.items.splice(0,model.items.length);\n}\n\nfunction update() {\n  count++;\n  for (var i=0;count>i;i++) {\n    model.items[i] = "Item #"+(i+1)+" (change "+count+")";\n  }\n}\n\nfunction showSelection(v) {\n  model.selectedItem = v;\n}\n\n// Needed by the playground application.\n// Update it, but do not remove it!\nmodule.exports = {\n    template: test,\n    data: [model]\n};\n</script>\n'}],description:"<p>This example demonstrates how a component can define and use sub-components to support advanced configuration use cases:</p>\n[#output]\n<p>To support sub-elements with attributes, sub-elements have to be declared with the <strong>component</strong> type and with a <strong>controller</strong> class (cf. <em>@option</em> elements in this sample). The controller should then declare <em>$attributes</em>, like for any component. </p>\n\n",sample:b("/samples/list2/list.hsp.js")},{title:"Component with sub-elements: Tabbar",folder:"tabbar",files:[{src:"tabbar.hsp",main:!0,text:'<script>\nvar klass = require("hsp/klass");\n\nvar TabCtrl = klass({\n    $attributes: {\n        label: { type: "template" },\n        body: { type: "template", defaultContent: true }\n    },\n    $init:function(parent) {\n        if (!this.selected) {\n          // as parent.$init() is called before this $init()\n          // selected may be already set (to true in this case)\n          this.selected=false;\n        }\n    }\n});\n\nvar TabBarCtrl = klass({\n    $attributes: {\n        "class": { type: "string" },\n        "selection": { type: "int", defaultValue: 0, binding: "2-way" }\n    },\n    $elements: {\n        "tab": { type: "component", controller: TabCtrl }\n    },\n    $init: function() {\n        this.select(this.selection);\n    },\n    select: function(idx) {\n        if (this.selectedTab && idx===this.selection) {\n            return;\n        }\n        // unselect previous tab\n        if (this.selection>=0 && this.selection<this.$content.length) {\n            this.$content[this.selection].selected=false;\n        }\n        // select new tab\n        if (idx>=0 && idx<this.$content.length) {\n            this.selection=idx;\n            var tab=this.$content[idx];\n            tab.selected=true;\n            this.selectedTab=tab;\n        }\n    }\n});\n</script>\n\n<template tabbar using ctrl:TabBarCtrl>\n  <div class="x-tabbar">\n    <nav class="x-tabs">\n        {foreach idx, tab in ctrl.$content}\n            {if tab.selected}\n                <span class="x-tab x-tab-selected">\n                    <#tab.label/>\n                </span>\n            {else}\n                <a class="x-tab" href="javascript:void(0)" onclick="{ctrl.select(idx)}">\n                    <#tab.label/>\n                </a>\n            {/if}\n            {if !tab_islast}\n              &nbsp; // separator\n            {/if}\n        {/foreach}\n    </nav>\n    <div class="x-tab-content">\n        <#ctrl.selectedTab.body />\n    </div>\n  </div>\n</template>\n\n<template test>\n  {let showSubTabs=false, selection1=0, selection2=0}\n  <#tabbar selection="{selection1}">\n    <@tab label="Tab A">\n      {if showSubTabs}\n        <#tabbar selection="{selection2}">\n            <@tab label="Tab 1">Sub tab 1</@tab>\n            <@tab label="Tab 2">Sub tab 2</@tab>\n        </#tabbar>\n      {else}\n        Tab A content...\n      {/if}\n    </@tab>\n    <@tab label="Tab B">Tab B content...</@tab>\n    <@tab label="Tab C">Tab C content...</@tab>\n  </#tabbar>\n  <label for="cb1">\n    <input id="cb1" type="checkbox" model="{showSubTabs}"/>\n    Show nested tabs in tab A\n  </label>\n</template>\n\n<script>\n// Needed by the playground application.\n// Update it, but do not remove it!\nmodule.exports = {\n    template: test\n};\n</script>\n'}],description:"<p>This example shows how a simple tab component can be implemented:</p>\n[#output]\n<p>A few things can be noted here:</p>\n<ul>\n<li>the <em>$init()</em> methods of the <em>tab</em> controllers are called after the <em>init()</em> of the tabbar - as such the <em>selected</em> property of a tab may be already set before the tab is initialized.</li>\n<li>the selected tab can be referenced as a controller property - cf <em>selectedTab</em> and then directly referenced in the tabbar template: <code>&lt;#ctrl.selectedTab.body/&gt;</code></li>\n</ul>\n\n",sample:b("/samples/tabbar/tabbar.hsp.js")},{title:"Integrating 3rd party components: Chart.js",folder:"thirdpartycpts",files:[{src:"chart.hsp",main:!0,text:'<script>\nvar klass=require("hsp/klass"), log=require("hsp/rt/log");\n\nvar labels=["January","February","March","April","May","June","July"];\nvar d1 = [\n  {data : [65,59,90,81,56,55,40], fillColor : "#CCCCCC", pointStrokeColor : "#FFF"},\n  {data : [28,48,40,19,96,27,100], fillColor : "#279CE6", pointStrokeColor : "#FFF"}\n];\nvar d2 = [\n  {data : [145,181,120,178,100,123,190], fillColor : "#FF4DBE", pointStrokeColor : "#FFF"},\n  {data : [123,45,76,43,97,12,38], fillColor : "#CCCCCC", pointStrokeColor : "#FFF"},\n  {data : [12,36,37,85,47,90,27], fillColor : "#279CE6", pointStrokeColor : "#FFF"}\n\n];\n\nvar ChartCpt=klass({\n  $attributes:{\n    width:{type:"int",binding:"1-way",defaultValue:100},\n    height:{type:"int",binding:"1-way",defaultValue:100},\n    type:{type:"string",binding:"1-way",defaultValue:"line"},\n    labels:{type:"object",binding:"1-way",defaultValue:[]},\n    datasets:{type:"object",binding:"1-way",defaultValue:[]},\n    options:{type:"object",defaultValue:{scaleFontColor:"#fff",scaleLineColor:"#AAA"}}\n  },\n  $refresh:function() {\n    if (!this.chart) {\n      var canvas=this.$getElement(0);\n      if (canvas.getContext) {\n        this.chart=new Chart(canvas.getContext("2d"));\n      }\n    }\n    if (this.chart) {\n      if (this.type==="bar") {\n        this.chart.Bar({labels:this.labels,datasets:this.datasets},this.options);\n      } else if (this.type==="line") {\n        this.chart.Line({labels:this.labels,datasets:this.datasets},this.options);\n      } else {\n        log.error("[ChartCpt] Invalid type: "+this.type);\n      }\n    }\n  }\n});\n</script>\n\n<template chart using c:ChartCpt>\n  <canvas width="{c.width}" height="{c.height}"></canvas>\n</template>\n\n<template test(data)>\n  {let datasets=(data.ds=="d1")? d1 : d2}\n  <#chart width="380" height="220" type="{data.type}" labels="{labels}" datasets="{datasets}"/>\n  <div style="padding:15 0 0 30">\n    // Chart type selection buttons\n    Chart type:\n    <label for="rb1"><input id="rb1" type="radio" model="{data.type}" value="line"/>Line</label>&nbsp;\n    <label for="rb2"><input id="rb2" type="radio" model="{data.type}" value="bar"/>Bar</label><br/>\n    // Chart dataset selection buttons\n    Datasets:\n    <label for="rb3"><input id="rb3" type="radio" model="{data.ds}" value="d1"/> d1</label>&nbsp;\n    <label for="rb4"><input id="rb4" type="radio" model="{data.ds}" value="d2"/> d2</label>\n  </div>\n</template>\n\n<script>\n// Needed by the playground application.\n// Update it, but do not remove it!\nmodule.exports = {\n    template: test,\n    data: [{\n      type:"line",\n      ds:"d1"\n    }]\n};\n</script>\n'}],description:'<p>This example shows how 3rd party widgets can be wrapped into Hashspace components.</p>\n[#output]\n<p>This example uses <a href="http://chartjs.org">Chart.js</a> that allows several types of charts to be drawn on a canvas component. For this example the chart.js script has been included in the main page of this application and is available as a global variable.</p>\n<p>Wrapping a 3rd party widget into a component involves at least 2 methods:</p>\n<ul>\n<li><strong>$refresh()</strong> which is an optional method that the component controller may implement. This method is automatically called when one of the component attribute changes - right after the component&#39;s template has been refreshed. As a consequence it is the right place to tell the 3rd party library used by the component to update its DOM.</li>\n<li><strong>$getElement(index)</strong> that is automatically added to component controllers that implement <em>$refresh()</em>and that allows to retrieve any root ELEMENT_NODEs generated by the component&#39;s template. In other words, this method allows to directly access the DOM generated by the component (as you can guess the index argument refers to the element&#39;s index - but note that non-element nodes are ignored and cannot be retrieved). As Hashspace may manipulate the DOM, this method should be used with care, preferably on Element nodes that have few interactions with Hashspace (such as the <em>canvas</em> element of this example)</li>\n</ul>\n<p>As a reminder there are 3 other methods that are likely to be used on component&#39;s controllers when wrapping 3rd party libraries:</p>\n<ul>\n<li><strong>$init(parent)</strong> which is an optional initialization method that is called when the component&#39;s attributes have been initialized with the values assigned in the component&#39;s instance (in this example, the <em>width</em> attribute value would be 380 in $init() and not 100 which is the default value)</li>\n<li><strong>$onDOMInsert()</strong> which is an optional method that is called when the component&#39;s markup is appended to the actual DOM</li>\n<li><strong>$dispose()</strong> which is an optional method called just before the component is destroyed. This method allows object references that could cause memory leaks to be cleaned (e.g. DOM reference kept in the component&#39;s controller).</li>\n</ul>\n\n',sample:b("/samples/thirdpartycpts/chart.hsp.js")},{category:"Mobile features"},{title:"Gestures",folder:"gestures",files:[{src:"gestures.hsp",main:!0,text:'<script>\nrequire(\'hsp/gestures/index\').register();\n</script>\n\n<template gestures(msgList)>\n    <div class="touchboard" style="height:200px; background: #27AAFC;text-align:center;"\n    	ontap="{addMsg($event)}" ontapstart="{addMsg($event)}" ontapcancel="{addMsg($event)}"\n        onlongpress="{addMsg($event)}" onlongpressstart="{addMsg($event)}" onlongpresscancel="{addMsg($event)}"\n        onsingletap="{addMsg($event)}" onsingletapstart="{addMsg($event)}" onsingletapcancel="{addMsg($event)}"\n        ondoubletap="{addMsg($event)}" ondoubletapstart="{addMsg($event)}" ondoubletapcancel="{addMsg($event)}"\n        onswipe="{addMsg($event)}" onswipestart="{addMsg($event)}" onswipemove="{addMsg($event)}" onswipecancel="{addMsg($event)}"\n        ondrag="{addMsg($event)}" ondragstart="{addMsg($event)}" ondragmove="{addMsg($event)}" ondragcancel="{addMsg($event)}"\n        onpinch="{addMsg($event)}" onpinchstart="{addMsg($event)}" onpinchmove="{addMsg($event)}" onpinchcancel="{addMsg($event)}">\n    	<h1>TOUCH ME</h1>\n    </div>\n    <div class="msglist" style="min-height: 50px;">\n        <div ontap="{clearMsg()}" style="float:right; background: #27AAFC; padding:10px; margin-top:10px;">Clear logs</div>\n    	{foreach msg in msgList}\n    		<div>{msg}</div>\n    	{/foreach}\n    </div>\n</template>\n\n<script>\nvar eventLog = [];\n\nfunction addMsg(evt) {\n	eventLog.push(evt.duration + "ms - " + evt.type + " from " + evt.target.tagName);\n}\n\nfunction clearMsg() {\n    eventLog.splice(0,eventLog.length);\n\n}\n\n// Needed by the playground application.\n// Update it, but do not remove it!\nmodule.exports = {\n    template: gestures,\n    data: [eventLog]\n};\n</script>\n'}],description:"<p>This sample shows special gestures handling in Hashspace.\nCurrently tap, longpress, single tap, double tap, drag, swipe and pinch are supported.</p>\n[#output]\n\n",sample:b("/samples/gestures/gestures.hsp.js")}]
}),a("samples/selectsample/selectsample.hsp.js",["hsp/$set","hsp/rt"],function(a){var b=a.require,c=(a.exports,a.filename,a.dirname,b("hsp/$set")),d=b("hsp/rt").template(["data"],function(a){var b,c,d,e,j,k;try{b=data}catch(l){b=a.g("data")}try{c=item}catch(l){c=a.g("item")}try{d=f}catch(l){d=a.g("getSelectedText")}try{e=g}catch(l){e=a.g("addOption")}try{j=h}catch(l){j=a.g("selectOption")}try{k=i}catch(l){k=a.g("removeOption")}var m={data:"undefined"==typeof data?a.g("data"):data,item:"undefined"==typeof item?a.g("item"):item,getSelectedText:"undefined"==typeof f?a.g("getSelectedText"):f,addOption:"undefined"==typeof g?a.g("addOption"):g,selectOption:"undefined"==typeof h?a.g("selectOption"):h,removeOption:"undefined"==typeof i?a.g("removeOption"):i};return[m,a.elt("div",0,{"class":"info2"},0,[a.$text(0,["The following select and its options are synchronized:"])]),a.elt("div",0,{"class":"section"},0,[a.$text(0,["Select with bound value: "]),a.elt("select",{e1:[9,"data.selectedValue"]},{model:["",1],style:"width:100px"},0,[a.$foreach({e1:[9,"data.options"]},"item_key","item",0,1,[a.elt("option",{e1:[9,"item.value"]},{value:["",1]},0,[a.$text({e1:[9,"item.label"]},["",1])])]),a.$text(0,[" "])])]),a.elt("div",0,{"class":"section"},0,[a.$text(0,["The selected value is "]),a.elt("span",0,{"class":"info"},0,[a.$text({e1:[9,"data.selectedValue"]},["",1])]),a.$text(0,[", the selected text is "]),a.elt("span",0,{"class":"info"},0,[a.$text({e1:[9,"getSelectedText(data.selectedValue)"]},["",1])])]),a.elt("div",0,{"class":"info2"},0,[a.$text(0,["You can add or remove options, and select one by changing the data model value:"])]),a.elt("div",0,{"class":"section"},0,[a.elt("button",{e1:[9,"addOption('four', 'Four')"]},0,{click:1},[a.$text(0,["Add option 'four'"])]),a.elt("button",{e1:[9,"selectOption('four')"]},0,{click:1},[a.$text(0,["Select option 'four'"])]),a.elt("button",{e1:[9,"removeOption('four')"]},0,{click:1},[a.$text(0,["Remove option 'four'"])])])]}),e={selectedValue:"two",options:[{value:"one",label:"One"},{value:"two",label:"Two"},{value:"three",label:"Three"}]};c(a,"exports",{template:d,data:[e]});var f=function(a){for(var b=e.options,c=0;c<b.length;c++){var d=b[c];if(d.value==a)return d.label}return"no selection"},g=function(a,b){for(var c=e.options,d=0;d<c.length;d++){var f=c[d];if(f.value==a)return}c.push({value:a,label:b})},h=function(a){c(e,"selectedValue",a)},i=function(a){for(var b=e.options,c=0;c<b.length;c++){var d=b[c];if(d.value==a)return void b.splice(c,1)}}}),a("samples/simplelist/simplelist.hsp.js",["hsp/$set","hsp/rt"],function(a){function b(a){d(a,"showdetails",!a.showdetails)}var c=a.require,d=(a.exports,a.filename,a.dirname,c("hsp/$set")),e=c("hsp/rt").template(["d"],function(a){var c,d,e;try{c=f}catch(g){c=a.g("d")}try{d=p}catch(g){d=a.g("p")}try{e=b}catch(g){e=a.g("toggleDetails")}var h={d:"undefined"==typeof f?a.g("d"):f,p:"undefined"==typeof p?a.g("p"):p,toggleDetails:"undefined"==typeof b?a.g("toggleDetails"):b};return[h,a.elt("div",0,{"class":"msg"},0,[a.$text(0,["Click on a person to see more details:"])]),a.elt("ul",0,{"class":"noTextSelection"},0,[a.$foreach({e1:[9,"d.people"]},"p_key","p",0,1,[a.elt("li",{e1:[9,"{'details':p.showdetails, 'special':p.name==='Bart'}"],e2:[9,"toggleDetails(p)"]},{"class":["",1]},{click:2},[a.$text({e1:[9,"p.name"]},["",1," "]),a.$if({e1:[9,"p.showdetails"]},1,[a.$text({e1:[9,"p.age"]},[": ",1," years old"])])])]),a.$text(0,[" "])]),a.elt("div",0,{"class":"msg"},0,[a.$text({e1:[9,"d.people.length"]},["Number of people in the list: ",1," "])])]}),f={people:[{name:"Homer",age:38},{name:"Marge",age:38},{name:"Bart",age:10},{name:"Lisa",age:8},{name:"Maggie",age:1}]};d(a,"exports",{template:e,data:[f]})}),a("samples/subtemplates/subtemplates.hsp.js",["hsp/$set","hsp/rt"],function(a){var b=a.require,c=a.exports,d=(a.filename,a.dirname,b("hsp/$set")),e=d(c,"personList",b("hsp/rt").template(["persons"],function(a){var b,c,d,e;try{b=h}catch(g){b=a.g("persons")}try{c=p}catch(g){c=a.g("p")}try{d=f}catch(g){d=a.g("personDescription")}try{e=p_islast}catch(g){e=a.g("p_islast")}var i={persons:"undefined"==typeof h?a.g("persons"):h,p:"undefined"==typeof p?a.g("p"):p,personDescription:"undefined"==typeof f?a.g("personDescription"):f,p_islast:"undefined"==typeof p_islast?a.g("p_islast"):p_islast};return[i,a.elt("div",0,{"class":"subtemplates"},0,[a.$foreach({e1:[9,"persons"]},"p_key","p",0,1,[a.cpt([d,"personDescription"],{e1:[9,"p"]},{person:["",1]},0),a.$text(0,[" "]),a.$if({e1:[9,"!p_islast"]},1,[a.$text(0,[" "]),a.elt("hr",0,0,0),a.$text(0,[" "])])]),a.$text(0,[" "])])]})),f=d(c,"personDescription",b("hsp/rt").template(["person"],function(a){var b,c;try{b=person}catch(d){b=a.g("person")}try{c=g}catch(d){c=a.g("item")}var e={person:"undefined"==typeof person?a.g("person"):person,item:"undefined"==typeof g?a.g("item"):g};return[e,a.elt("div",0,{"class":"person"},0,[a.cpt([c,"item"],{e1:[9,"person.firstName"]},{label:"First Name: ",value:["",1]},0),a.cpt([c,"item"],{e1:[9,"person.lastName"]},{label:"Last Name: ",value:["",1]},0)])]})),g=b("hsp/rt").template(["label","value"],function(a){var b,c;try{b=value}catch(d){b=a.g("value")}try{c=label}catch(d){c=a.g("label")}var e={value:"undefined"==typeof value?a.g("value"):value,label:"undefined"==typeof label?a.g("label"):label};return[e,a.$if({e1:[9,"value"]},1,[a.elt("div",0,0,0,[a.elt("div",0,{"class":"label"},0,[a.$text({e1:[9,"label"]},["",1])]),a.elt("div",0,{"class":"value"},0,[a.$text({e1:[9,"value"]},["",1])])])])]}),h=[{firstName:"Homer",lastName:"Simpsons"},{firstName:"Marge",lastName:"Simpsons"},{firstName:"Bart"},{firstName:"Lisa"},{firstName:"Maggy"}];d(a,"exports",{template:e,data:[h]})}),a("samples/tabbar/tabbar.hsp.js",["hsp/$set","hsp/klass","hsp/rt"],function(a){var b=a.require,c=(a.exports,a.filename,a.dirname,b("hsp/$set")),d=b("hsp/klass"),e=d({$attributes:{label:{type:"template"},body:{type:"template",defaultContent:!0}},$init:function(){this.selected||c(this,"selected",!1)}}),f=d({$attributes:{"class":{type:"string"},selection:{type:"int",defaultValue:0,binding:"2-way"}},$elements:{tab:{type:"component",controller:e}},$init:function(){this.select(this.selection)},select:function(a){if((!this.selectedTab||a!==this.selection)&&(this.selection>=0&&this.selection<this.$content.length&&c(this.$content[this.selection],"selected",!1),a>=0&&a<this.$content.length)){c(this,"selection",a);var b=this.$content[a];c(b,"selected",!0),c(this,"selectedTab",b)}}}),g=b("hsp/rt").template({ctl:[f,"TabBarCtrl"],ref:"ctrl"},function(a){var b,c,d,e;try{b=ctrl}catch(f){b=a.g("ctrl")}try{c=tab}catch(f){c=a.g("tab")}try{d=idx}catch(f){d=a.g("idx")}try{e=tab_islast}catch(f){e=a.g("tab_islast")}var g={ctrl:"undefined"==typeof ctrl?a.g("ctrl"):ctrl,tab:"undefined"==typeof tab?a.g("tab"):tab,idx:"undefined"==typeof idx?a.g("idx"):idx,tab_islast:"undefined"==typeof tab_islast?a.g("tab_islast"):tab_islast};return[g,a.elt("div",0,{"class":"x-tabbar"},0,[a.elt("nav",0,{"class":"x-tabs"},0,[a.$foreach({e1:[9,"ctrl.$content"]},"idx","tab",0,1,[a.$if({e1:[9,"tab.selected"]},1,[a.elt("span",0,{"class":"x-tab x-tab-selected"},0,[a.cpt([null,"tab","label"],0,0,0)])],[a.elt("a",{e1:[9,"ctrl.select(idx)"]},{"class":"x-tab",href:"javascript:void(0)"},{click:1},[a.cpt([null,"tab","label"],0,0,0)])]),a.$if({e1:[9,"!tab_islast"]},1,[a.$text(0,["Â   "])])]),a.$text(0,[" "])]),a.elt("div",0,{"class":"x-tab-content"},0,[a.cpt([null,"ctrl","selectedTab","body"],0,0,0)])])]}),h=b("hsp/rt").template([],function(a){var b,c,d,e;try{b=selection1}catch(f){b=a.g("selection1")}try{c=showSubTabs}catch(f){c=a.g("showSubTabs")}try{d=selection2}catch(f){d=a.g("selection2")}try{e=g}catch(f){e=a.g("tabbar")}var h={selection1:"undefined"==typeof selection1?a.g("selection1"):selection1,showSubTabs:"undefined"==typeof showSubTabs?a.g("showSubTabs"):showSubTabs,selection2:"undefined"==typeof selection2?a.g("selection2"):selection2,tabbar:"undefined"==typeof g?a.g("tabbar"):g};return[h,a.let({e1:[9,"showSubTabs=false, selection1=0, selection2=0"]}),a.cpt([e,"tabbar"],{e1:[9,"selection1"]},{selection:["",1]},0,[a.catt("tab",0,{label:"Tab A"},0,[a.$if({e1:[9,"showSubTabs"]},1,[a.cpt([e,"tabbar"],{e1:[9,"selection2"]},{selection:["",1]},0,[a.catt("tab",0,{label:"Tab 1"},0,[a.$text(0,["Sub tab 1"])]),a.catt("tab",0,{label:"Tab 2"},0,[a.$text(0,["Sub tab 2"])])])],[a.$text(0,["Tab A content... "])])]),a.catt("tab",0,{label:"Tab B"},0,[a.$text(0,["Tab B content..."])]),a.catt("tab",0,{label:"Tab C"},0,[a.$text(0,["Tab C content..."])])]),a.elt("label",0,{"for":"cb1"},0,[a.elt("input",{e1:[9,"showSubTabs"]},{id:"cb1",type:"checkbox",model:["",1]},0),a.$text(0,["Show nested tabs in tab A "])])]});c(a,"exports",{template:h})}),a("samples/textarea/textarea.hsp.js",["hsp/$set","hsp/rt"],function(a){function b(a){g++,msg=[];for(var b=0;g>b;b++)msg.push("This text contains "+g+" lines");d(a,"text",msg.join("\n"))}var c=a.require,d=(a.exports,a.filename,a.dirname,c("hsp/$set")),e=c("hsp/rt").template(["data"],function(a){var c,d;try{c=data}catch(e){c=a.g("data")}try{d=b}catch(e){d=a.g("changeText")}var f={data:"undefined"==typeof data?a.g("data"):data,changeText:"undefined"==typeof b?a.g("changeText"):b};return[f,a.elt("div",0,{"class":"info2"},0,[a.$text(0,["The following textarea elements are synchronized:"])]),a.elt("div",0,{"class":"section"},0,[a.elt("div",0,0,0,[a.$text(0,["Text #1:"])]),a.elt("textarea",{e1:[9,"data.text"]},{rows:"4",cols:"40",model:["",1]},0)]),a.elt("div",0,{"class":"section"},0,[a.elt("div",0,0,0,[a.$text(0,["Text #2:"])]),a.elt("textarea",{e1:[9,"data.text"]},{rows:"4",cols:"40",model:["",1]},0)]),a.elt("a",{e1:[9,"changeText(data)"]},{href:"javascript:void(0)"},{click:1},[a.$text(0,["Change text"])])]}),f={text:"    @..@\n   (----)\n  ( >__< )\n ^^ ~~ ^^"},g=1;d(a,"exports",{template:e,data:[f]})}),a("samples/thirdpartycpts/chart.hsp.js",["hsp/$set","hsp/klass","hsp/rt/log","hsp/rt"],function(a){var b=a.require,d=(a.exports,a.filename,a.dirname,b("hsp/$set")),e=b("hsp/klass"),f=b("hsp/rt/log"),g=["January","February","March","April","May","June","July"],h=[{data:[65,59,90,81,56,55,40],fillColor:"#CCCCCC",pointStrokeColor:"#FFF"},{data:[28,48,40,19,96,27,100],fillColor:"#279CE6",pointStrokeColor:"#FFF"}],i=[{data:[145,181,120,178,100,123,190],fillColor:"#FF4DBE",pointStrokeColor:"#FFF"},{data:[123,45,76,43,97,12,38],fillColor:"#CCCCCC",pointStrokeColor:"#FFF"},{data:[12,36,37,85,47,90,27],fillColor:"#279CE6",pointStrokeColor:"#FFF"}],j=e({$attributes:{width:{type:"int",binding:"1-way",defaultValue:100},height:{type:"int",binding:"1-way",defaultValue:100},type:{type:"string",binding:"1-way",defaultValue:"line"},labels:{type:"object",binding:"1-way",defaultValue:[]},datasets:{type:"object",binding:"1-way",defaultValue:[]},options:{type:"object",defaultValue:{scaleFontColor:"#fff",scaleLineColor:"#AAA"}}},$refresh:function(){if(!this.chart){var a=this.$getElement(0);a.getContext&&d(this,"chart",new Chart(a.getContext("2d")))}this.chart&&("bar"===this.type?this.chart.Bar({labels:this.labels,datasets:this.datasets},this.options):"line"===this.type?this.chart.Line({labels:this.labels,datasets:this.datasets},this.options):f.error("[ChartCpt] Invalid type: "+this.type))}}),k=b("hsp/rt").template({ctl:[j,"ChartCpt"],ref:"c"},function(a){var b;try{b=c}catch(d){b=a.g("c")}var e={c:"undefined"==typeof c?a.g("c"):c};return[e,a.elt("canvas",{e1:[9,"c.width"],e2:[9,"c.height"]},{width:["",1],height:["",2]},0)]}),l=b("hsp/rt").template(["data"],function(a){var b,c,d,e,f,j;try{b=data}catch(l){b=a.g("data")}try{c=h}catch(l){c=a.g("d1")}try{d=i}catch(l){d=a.g("d2")}try{e=g}catch(l){e=a.g("labels")}try{f=datasets}catch(l){f=a.g("datasets")}try{j=k}catch(l){j=a.g("chart")}var m={data:"undefined"==typeof data?a.g("data"):data,d1:"undefined"==typeof h?a.g("d1"):h,d2:"undefined"==typeof i?a.g("d2"):i,labels:"undefined"==typeof g?a.g("labels"):g,datasets:"undefined"==typeof datasets?a.g("datasets"):datasets,chart:"undefined"==typeof k?a.g("chart"):k};return[m,a.let({e1:[9,'datasets=(data.ds=="d1")? d1 : d2']}),a.cpt([j,"chart"],{e1:[9,"data.type"],e2:[9,"labels"],e3:[9,"datasets"]},{width:"380",height:"220",type:["",1],labels:["",2],datasets:["",3]},0),a.elt("div",0,{style:"padding:15 0 0 30"},0,[a.$text(0,[" Chart type: "]),a.elt("label",0,{"for":"rb1"},0,[a.elt("input",{e1:[9,"data.type"]},{id:"rb1",type:"radio",model:["",1],value:"line"},0),a.$text(0,["Line"])]),a.$text(0,["Â  "]),a.elt("label",0,{"for":"rb2"},0,[a.elt("input",{e1:[9,"data.type"]},{id:"rb2",type:"radio",model:["",1],value:"bar"},0),a.$text(0,["Bar"])]),a.elt("br",0,0,0),a.$text(0,[" Datasets: "]),a.elt("label",0,{"for":"rb3"},0,[a.elt("input",{e1:[9,"data.ds"]},{id:"rb3",type:"radio",model:["",1],value:"d1"},0),a.$text(0,[" d1"])]),a.$text(0,["Â  "]),a.elt("label",0,{"for":"rb4"},0,[a.elt("input",{e1:[9,"data.ds"]},{id:"rb4",type:"radio",model:["",1],value:"d2"},0),a.$text(0,[" d2"])])])]});d(a,"exports",{template:l,data:[{type:"line",ds:"d1"}]})}),a("samples/timer/timer.hsp.js",["hsp/$set","hsp/klass","hsp/rt"],function(a){var b=a.require,c=(a.exports,a.filename,a.dirname,b("hsp/$set")),d=b("hsp/klass"),e=b("hsp/rt").template(["timer"],function(a){var b;try{b=timer}catch(c){b=a.g("timer")}var d={timer:"undefined"==typeof timer?a.g("timer"):timer};return[d,a.$text({e1:[9,"timer.secondsElapsed"]},["Seconds Elapsed: ",1])]}),f=d({$constructor:function(){c(this,"secondsElapsed",0),c(this,"_iid",setInterval(this.tick.bind(this),1e3))},$dispose:function(){clearInterval(this._iid)},tick:function(){c.inc(this,"secondsElapsed")}});c(a,"exports",{template:e,data:function(){return[new f]}})}),a("samples/todolist/todolist.hsp.js",["hsp/$set","hsp/klass","hsp/rt"],function(a){var b=a.require,c=(a.exports,a.filename,a.dirname,b("hsp/$set")),d=b("hsp/klass"),e=b("hsp/rt").template(["todo"],function(a){var b,c;try{b=todo}catch(d){b=a.g("todo")}try{c=itm}catch(d){c=a.g("itm")}var e={todo:"undefined"==typeof todo?a.g("todo"):todo,itm:"undefined"==typeof itm?a.g("itm"):itm};return[e,a.elt("div",0,0,0,[a.elt("h3",0,0,0,[a.$text(0,["TODO..."])]),a.elt("ul",0,0,0,[a.$foreach({e1:[9,"todo.data.items"]},"itm_key","itm",0,1,[a.elt("li",0,0,0,[a.$text({e1:[9,"itm"]},["",1])])]),a.$text(0,[" "])]),a.elt("form",{e1:[9,"todo.addItem()"]},0,{submit:1},[a.elt("input",{e1:[9,"todo.data.newTodoItem"]},{type:"text",value:["",1]},0),a.elt("button",0,0,0,[a.$text({e1:[9,"'Add #' + (todo.data.items.length + 1)"]},["",1])])])])]}),f=d({$constructor:function(){c(this,"data",{newTodoItem:"",items:[]})},addItem:function(){var a=this.data,b=a.items;return b.push(a.newTodoItem),c(a,"newTodoItem",""),!1}}),g=new f;c(a,"exports",{template:e,data:[g]})})}(noder.define);