<script>
var splitter = require("./splitter.hsp.js");
var plunkerExport = require("./plunker.js");

var Class = require("hsp/klass");

var DescriptionCtrl = Class({
    $attributes: {
        sample: { type: "object", binding: "1-way" }
    },
    $init: function() {
        this.$onSampleChange();
    },
    $refresh: function() {
        if (!this.sample) return;
        var root = this.$getElement(0), before, after;
        if (root) {
            before = root.querySelector(".before");
            after = root.querySelector(".after");
            before.innerHTML = this.before;
            after.innerHTML = this.after;
        }
    },

    $onSampleChange: function() {
        if (!this.sample) return;
        var parts = this.sample.description.split("[#output]");
        this.before = parts[0];
        this.after = parts[1];
    }
});
</script>

<template desc using ctrl:DescriptionCtrl>
    <div id="description">
        {if ctrl.sample}
            <div class="before"></div>
        {/if}
        <div id="output" class="output"></div>
        <div id="logs" class="logoutput"></div>
        {if ctrl.sample}
            <div class="after"></div>
        {/if}
    </div>
</template>


<export template mainLayout(data, playground)>
    <#sampleList data="{data}" playground="{playground}"/>

    <div class="hsp-sample {{'hsp-sample-full': data.navCollapsed}}" onclick="{hideNavHover($event, data)}">
        <!--div class="actions">
            <a href="" title="Toggle code panel"><span class="icon icon-code icon-active"></span></a>
            <a href="" title="Toggle description panel"><span class="icon icon-preview icon-active"></span></a>
        </div-->
        <h4 class="title">{data.sampleTitle}</h4>

        <div class="editor" style="width: {data.splitterPos}">
            <button class="plunker" title="Export this code to Plunker" onclick="{plunkerExport($event, playground)}">Edit in Plunker</button>
            <div id="editor"></div>
        </div>

        <#splitter type="horizontal" size="3" onrelease="{splitterReleased($event.position, data, playground)}"/>

        <div class="description" style="left: {data.splitterPos}">
            <div>
                <h4>Description</h4>
                <#desc sample="{data.samples[data.sampleIndex]}" />
            </div>
        </div>
    </div>
</template>

<script>
function splitterReleased(position, data, playground) {
    data.splitterPos = position + "px";
    editorResize(playground);
}

function editorResize(playground, delay) {
    // Pseudo nextTick when delay = 0
    delay = delay || 0;
    setTimeout(function() {
        playground.editor.resize(true);
    }, delay);
}

function collapseNav(event, data, playground) {
    data.navCollapsed = !data.navCollapsed;
    data.navHover = false;
    editorResize(playground, 218);
    event.preventDefault();
}

function showListHover(event, data) {
    data.navHover = !data.navHover;
    event.preventDefault();
    event.stopPropagation();
}

function hideNavHover(event, data) {
    if (data.navHover) {
        data.navHover = false;
    }
}
</script>

<template sampleList(data, playground)>
    <div class="samples-list {{'samples-list-collapsed': data.navCollapsed}}"
        onclick="{hideNavHover($event, data)}">

        <a href="" class="collapse" title="{data.navCollapsed ? 'Expand sidebar' : 'Collapse sidebar'}" onclick="{collapseNav($event, data, playground)}"><span class="icon"></span></a>

        {if data.navCollapsed}
            <a href="" class="showlist action" title="See samples list" onclick="{showListHover($event, data)}"><span class="icon"></span></a>
            <!--a href="" class="action" title="Toggle code panel"><span class="icon icon-code icon-active"></span></a>
            <a href="" class="action" title="Toggle description panel"><span class="icon icon-preview icon-active"></span></a-->
        {else}
            <h4>Samples</h4>
        {/if}

        <div class="{ data.navHover ? 'list-hover' : 'list'}">
            {foreach index, sample in data.samples}
                {if sample.category}
                    <div class="category">{sample.category}</div>
                {else}
                    <div class="item {{'selected': data.sampleIndex === index}}">
                        <a href="{'#' + sample.folder}">{sample.title}</a>
                    </div>
                {/if}
            {/foreach}
        </div>
    </div>
</template>

<export template errorList(errors)>
    {if errors && errors.length}
        <div class="errorlist">
            <ul>
                {foreach error in errors}
                <li>
                    <div class="{error.type}"> {error.message} </div>
                    {if error.line || error.file}
                        <div class="ctxt">
                            [{error.file}]
                            {if error.line}line: {error.line}, column: {error.column}{/if}
                        </div>
                    {/if}
                    {if error.code}
                        <div class="code">
                            >> code: <span class="codetext">{error.code}</span>
                        </div>
                    {/if}
                </li>
                {/foreach}
            </ul>
        </div>
    {/if}
</template>
