var $set=require("hsp/$set"); 
// ################################################################ 
//  This file has been generated by the hashspace compiler          
//  Direct MODIFICATIONS WILL BE LOST when the file is recompiled!  
// ################################################################ 
var inputOnupdate = require("hsp/rt").template(["data"], function(n){
  var _data,_$event;try {_data=data} catch(e) {_data=n.g('data')};try {_$event=$event} catch(e) {_$event=n.g('$event')};
  var __s = {data : typeof data === 'undefined' ? n.g('data') : data, $event : typeof $event === 'undefined' ? n.g('$event') : $event};
  return [__s,n.elt("div",0,{"class":"info2"},0,[n.$text(0,["Input field with a standard timer of 500ms:"])]),n.elt("div",0,{"class":"section"},0,[n.elt("input",{e1:[9,"data.comment"],e2:[9,"data.updateHandler($event)"]},{"type":"text","model":["",1]},{"update":2}),n.elt("br",0,0,0),n.elt("span",0,0,0,[n.$text({e1:[9,"data.delayed"]},["Oninput result: ",1])])]),n.elt("div",0,{"class":"info2"},0,[n.$text(0,["Input field with a longer timer of 2000ms:"])]),n.elt("div",0,{"class":"section"},0,[n.elt("input",{e1:[9,"data.comment2"],e2:[9,"data.updateHandler2($event)"]},{"type":"text","model":["",1],"update-timeout":"2000"},{"update":2}),n.elt("br",0,0,0),n.elt("span",0,0,0,[n.$text({e1:[9,"data.delayed2"]},["Oninput result: ",1])])]),n.elt("div",0,{"class":"info2"},0,[n.$text(0,["Textarea with a standard timer of 500ms:"])]),n.elt("div",0,{"class":"section"},0,[n.elt("textarea",{e1:[9,"data.comment3"],e2:[9,"data.updateHandler3($event)"]},{"rows":"4","cols":"40","model":["",1]},{"update":2}),n.elt("br",0,0,0),n.elt("span",0,0,0,[n.$text({e1:[9,"data.delayed3"]},["Oninput result: ",1])])])];
});


var d={comment:"Edit me and wait!", delayed:"",
updateHandler: function(event) {
    $set(this, "delayed", event.target.value);
},
comment2:"Edit me and wait more!", delayed2:"",
updateHandler2: function(event) {
    $set(this, "delayed2", event.target.value);
},
comment3:"Edit me and wait!", delayed3:"",
updateHandler3: function(event) {
    $set(this, "delayed3", event.target.value);
}};

// Needed by the playground application.
// Update it, but do not remove it!
$set(module, "exports", {
    template: inputOnupdate,
    data: [d]
});