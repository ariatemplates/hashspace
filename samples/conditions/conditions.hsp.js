var $set=require("hsp/$set"); 
// ################################################################ 
//  This file has been generated by the hashspace compiler          
//  Direct MODIFICATIONS WILL BE LOST when the file is recompiled!  
// ################################################################ 
var klass=require("hsp/klass");

// nt is an instance of NumberTester

var test = require("hsp/rt").template(["nt"], function(n){
  var _nt;try {_nt=nt} catch(e) {_nt=n.g('nt')};
  var __s = {nt : typeof nt === 'undefined' ? n.g('nt') : nt};
  return [__s,n.elt("div",0,0,0,[n.$text(0,["Number: "]),n.elt("span",0,{"class":"textvalue"},0,[n.$text({e1:[9,"nt.number"]},["",1])]),n.$if({e1:[9,"nt.number==0"]},1,[n.$text(0,["(Number equals zero) "])],[n.$if({e1:[9,"nt.number>0"]},1,[n.$text(0,["(Number is greater than zero) "])],[n.$text(0,["(Number is less than zero) "])])]),n.elt("br",0,0,0),n.$text(0,["Condition using ternary operator: Number is "]),n.elt("span",0,{"class":"textvalue"},0,[n.$text({e1:[9,"nt.number>0? \"strictly positive\" : \"negative or null\""]},["",1," "])])]),n.elt("div",0,{"class":"section2"},0,[n.elt("a",{e1:[9,"nt.increment(1)"]},{"href":"javascript:void(0)"},{"click":1},[n.$text(0,["Increment Number"])]),n.$text(0,[" - "]),n.elt("a",{e1:[9,"nt.increment(-1)"]},{"href":"javascript:void(0)"},{"click":1},[n.$text(0,["Decrement Number"])])])];
});


// klass is a little utility to create a JS object constructor
// from a simple JSON structure - main goals are to
// to simplify prototypal inheritance and ease code reading
var NumberTester = klass({
    $constructor:function() {
        $set(this, "number", 0);
    },
    increment:function(nbr2) {
        $set(this, "number", this.number+nbr2);
        return false;
    }
});

// Needed by the playground application.
// Update it, but do not remove it!
$set(module, "exports", {
    template: test,
    data: function() {
        return [new NumberTester()];
    }
});