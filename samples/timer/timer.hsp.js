var $set=require("hsp/$set"); 
// ################################################################ 
//  This file has been generated by the hashspace compiler          
//  Direct MODIFICATIONS WILL BE LOST when the file is recompiled!  
// ################################################################ 

var klass=require("hsp/klass");


var elapsedTime = require("hsp/rt").template(["timer"], function(n){
  var _timer;try {_timer=timer} catch(e) {_timer=n.g('timer')};
  var __s = {timer : typeof timer === 'undefined' ? n.g('timer') : timer};
  return [__s,n.$text({e1:[9,"timer.secondsElapsed"]},["Seconds Elapsed: ",1])];
});


// klass is a little utility to create a JS object constructor
// from a simple JSON structure - main goals are to
// to simplify prototypal inheritance and ease code reading
var Timer=klass({
    $constructor:function() {
        $set(this, "secondsElapsed", 0);
        $set(this, "_iid", setInterval(this.tick.bind(this),1000));
    },
    $dispose:function() {
        clearInterval(this._iid);
    },
    tick:function() {
        $set.inc(this, "secondsElapsed");
    }
});

// Needed by the playground application.
// Update it, but do not remove it!
$set(module, "exports", {
    template: elapsedTime,
    data: function() {
        return [new Timer()];
    }
});