##### Template:
<script>
var x="text1";
function func() {var x="text2"};
</script>

<template id="hello1">
   Hello World!
</template>

<script>
// comment
function func2(z) {return z;}
</script>

<template id="hello1bis" args="arg1, arg2">
	Hello
	Again!
</template>
<script>
var z;
</script>
##### Parsed Tree:

[ 
  { type: 'plaintext', value: '\nvar x=\"text1\";\nfunction func() {var x=\"text2\"};\n\n'},
  { type: 'plaintext', value: '\n'},
  { type: 'template', name: 'hello1', args: [], content: [
    { type: 'text', value: 'Hello World!' } 
  ]},
  { type: 'plaintext', value: '\n'},
  { type: 'plaintext', value: '\n// comment\nfunction func2(z) {return z;}\n\n'},
  { type: 'plaintext', value: '\n'},
  { type: 'template', name: 'hello1bis', args: [ 'arg1', 'arg2' ], content: [
    { type: 'text', value: 'Hello Again!' } 
  ]}
]

##### Syntax Tree:

[ 
  { type: 'plaintext', value: '\nvar x=\"text1\";\nfunction func() {var x=\"text2\"};\n\n'},
  { type: 'plaintext', value: '\n'},
  { type: 'template', name: 'hello1', args: [], content: [
    { type: 'text', value: 'Hello World!' } 
  ]},
  { type: 'plaintext', value: '\n'},
  { type: 'plaintext', value: '\n// comment\nfunction func2(z) {return z;}\n\n'},
  { type: 'plaintext', value: '\n'},
  { type: 'template', name: 'hello1bis', args: [ 'arg1', 'arg2' ], content: [
    { type: 'text', value: 'Hello Again!' } 
  ]}
]

##### Template Code 1
hello1=[__s,
  n.$text(0, ["Hello World!"])
]

##### Template Code 2
hello1bis=[__s,
  n.$text(0, ["Hello Again!"])
]
