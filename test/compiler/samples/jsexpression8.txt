##### Template:
<template id="hello" args="person,property">
	Hello {person[property]}!
</template>

##### Parsed Tree:
[
  {
    "type": "template","name": "hello","args": ["person","property"],
    "content": [
      { "type": "text","value": "Hello ","line": 2,"column": 2 },
      {
        "type": "expression",
        "value": "person[property]",
        "category": "jsexptext",
        "line": 2,
        "column": 8,
        "bound": true
      },
      { "type": "text","value": "!","line": 2,"column": 26 }
    ],
    "closed": true,
    "endLine": 3
  }
]

##### Syntax Tree:
[
  {
    "type": "template","name": "hello","args": ["person","property"],"isExport": false,"startLine": 1,"endLine": 3,
    "content": [
      {
        "type": "textblock",
        "content": [
          { "type": "text","value": "Hello ","line": 2,"column": 2 },
          {
            "type": "expression",
            "value": "person[property]",
            "category": "jsexptext",
            "line": 2,
            "column": 8
          },
          { "type": "text","value": "!","line": 2,"column": 26 }
        ]
      }
    ]
  }
]

##### Template Code
hello=[__s,
  n.$text({
    e1:[9,"person[property]"]
  },["Hello ",1,"!"])
]
