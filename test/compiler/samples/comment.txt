##### Template:
# template hello(world)
	Hel / lo // comment 1
	World! /* this is a
	multi line
	comment */
	{if (world)} // comment 2
	   <!-- another comment
	   on multiple 
	   lines 
	   # /template
	   -->
	   ... Escaping \/* works *\/
	{/if}
# /template

##### Parsed Tree

[
  {
    "type": "template",
    "name": "hello",
    "args": ["world"],
    "content": [
      {"type": "text","value": "Hel / lo "},
      {"type": "comment","value": " comment 1"},
      {"type": "text","value": " World! "},
      {"type": "comment","value": " this is a\n\tmulti line\n\tcomment "},
      {"type": "text","value": " "},
      {"type": "if", "condition": {type:"Variable", category:"jsexpression", name:"world"}},
      {"type": "text","value": " "},
      {"type": "comment","value": " comment 2"},
      {"type": "text","value": " "},
      {"type": "comment","value": " another comment\n\t   on multiple \n\t   lines \n\t   # /template\n\t   "},
      {"type": "text","value": " ... Escaping /* works */ "},
      {"type": "endif"}
    ]
  }
]

##### Syntax Tree
[
  {
    "type": "template",
    "name": "hello",
    "args": ["world"],
    "content": [
      {
        "type": "text",
        "value": "Hel / lo  World!  "
      },
      {
        "type": "if",
        "condition": {
          "type": "expression",
          "category": "objectref",
          "bound": true,
          "path": [
            "world"
          ],
          "line": 6,
          "column": 6
        },
        "content1": [
          {
            "type": "text",
            "value": "   ... Escaping /* works */ "
          }
        ]
      }
    ]
  }
]

##### Template Code
hello=[
  n.$text(0,["Hel / lo  World!"]),
  n.$if( {e1:[1,1,"world"]}, 1, [ 
      n.$text(0,["   ... Escaping /* works */ "])
  ])
]
