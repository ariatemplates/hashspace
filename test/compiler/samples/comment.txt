##### Template:
<template id="hello" args="world">
	Hello // comment 1
	World!
	{if (world)} // comment 2
	   <!-- another comment
	   on multiple 
	   lines 
	   </template>
	   -->
	   ...
	{/if}
</template>

##### Parsed Tree

[
  {
    "type": "template",
    "name": "hello",
    "args": ["world"],
    "content": [
      {"type": "text","value": "Hello "},
      {"type": "comment","value": " comment 1"},
      {"type": "text","value": " World! "},
      {"type": "if", "condition": {category:"jsexptext", value:"world"}},
      {"type": "text","value": " "},
      {"type": "comment","value": " comment 2"},
      {"type": "text","value": " "},
      {"type": "comment","value": " another comment\n\t   on multiple \n\t   lines \n\t   </template>\n\t   "},
      {"type": "text","value": " ... "},
      {"type": "endif"}
    ]
  }
]

##### Syntax Tree
[
  {
    "type": "template",
    "name": "hello",
    "args": ["world"],
    "content": [
      {
        "type": "text",
        "value": "Hello  World! "
      },
      {
        "type": "if",
        "condition": {
          "category": "jsexptext",
          "value": "world",
          "line": 4,
          "column": 7
        },
        "content1": [
          {
            "type": "text",
            "value": "   ... "
          }
        ]
      }
    ]
  }
]

##### Template Code
hello=[__s,
  n.$text(0,["Hello  World!"]),
  n.$if( {e1:[9,"world"]}, 1, [
      n.$text(0,["   ... "])
  ])
]
