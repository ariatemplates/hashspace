<script>
/*
 * Copyright 2012 Amadeus s.a.s.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

var hsp=require("hsp/rt"),
    ht=require("hsp/utils/hashtester");


function globalHelper() {
    return true;
}
</script>

<template id="test1">
    {if (globalHelper())}
        <div class="test">I am here because of a global helper</div>
    {/if}
</template>

<template id="test2">
  <#test1 />
  <#test1 />
</template>

<script>
describe("Templates using expressions with global references", function () {

    it("should actually access the reference", function () {
        var h = ht.newTestContext();
        test1().render(h.container);
        expect(h.container.childNodes[1].innerHTML).to.equal("I am here because of a global helper");
        h.$dispose();
    });

    it("should be rendered more than once w/ no error", function () {
        var h = ht.newTestContext();
        test2().render(h.container);
        expect(h(".test").length).to.equal(2);
        h.$dispose();
    });

});
</script>
