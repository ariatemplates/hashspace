/*
 * Copyright 2014 Amadeus s.a.s.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

var hsp = require("hsp/rt"),
    klass = require("hsp/klass");

{template test1()}
    <!-- <span>this is a comment
    on multiple lines</span> -->
{/template}

{template test2()}
    <div>
        <!-- <span>this is a comment
        on multiple lines</span> -->
    </div>
{/template}

{template test3()}
    <div>
        <#test1/>
    </div>
{/template}

// sample controller
SimpleController = klass({
  attributes: {
    "expanded":{type:"boolean",binding:"2-way"}
  }
});

// sample panel template
{template simple using c:SimpleController}
    <!-- <span>this is a comment
    on multiple lines</span> -->
{/template}

{template test4()}
    <div>
        <#simple/>
    </div>
{/template}

describe("Comment Nodes", function () {
    var COMMENT_NODE = 8;

    it("validates a HTML comment in a template", function() {
        var n = test1();
        expect(n.node.firstChild.nodeType).to.equal(COMMENT_NODE);
        expect(n.node.firstChild.nodeValue).to.equal(" <span>this is a comment\n    on multiple lines</span> ");
        n.$dispose();
    });

    it("validates a HTML comment in an element", function() {
        var n = test2();
        expect(n.node.firstChild.firstChild.nodeType).to.equal(COMMENT_NODE);
        expect(n.node.firstChild.firstChild.nodeValue).to.equal(" <span>this is a comment\n        on multiple lines</span> ");
        n.$dispose();
    });

    it("validates a HTML comment in a sub template", function() {
        var n = test3();
        expect(n.node.firstChild.childNodes[1].nodeType).to.equal(COMMENT_NODE);
        expect(n.node.firstChild.childNodes[1].nodeValue).to.equal(" <span>this is a comment\n    on multiple lines</span> ");
        n.$dispose();
    });

    it("validates a HTML comment in a component", function() {
        var n = test4();
        expect(n.node.firstChild.childNodes[1].nodeType).to.equal(COMMENT_NODE);
        expect(n.node.firstChild.childNodes[1].nodeValue).to.equal(" <span>this is a comment\n    on multiple lines</span> ");
        n.$dispose();
    });
});